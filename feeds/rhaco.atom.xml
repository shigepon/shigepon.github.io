<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>shigeponが関心のある技術情報など - rhaco</title><link href="http://blog.shigepon.info/" rel="alternate"></link><link href="http://blog.shigepon.info/feeds/rhaco.atom.xml" rel="self"></link><id>http://blog.shigepon.info/</id><updated>2014-03-15T13:28:55+09:00</updated><entry><title>rhaco3 memo</title><link href="http://blog.shigepon.info/blog/2014/03/15/rhaco3-memo/" rel="alternate"></link><published>2014-03-15T13:28:55+09:00</published><updated>2014-03-15T13:28:55+09:00</updated><author><name>shigepon</name></author><id>tag:blog.shigepon.info,2014-03-15:/blog/2014/03/15/rhaco3-memo/</id><summary type="html"></summary><content type="html">&lt;p&gt;rhaco3を使ってる人なんて世界で何人居るのかなと思いつつ、あまりに情報が少ないので、メモ書きしていく。
大きめネタは別記事にまとめるが小さいネタはここに追記する。&lt;/p&gt;
&lt;h3&gt;Daoで作ったSQLを確認する方法&lt;/h3&gt;
&lt;p&gt;Daoを継承したモデルとして、Hogeモデルがあるとして&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;\Hoge::start_record();&lt;/span&gt;
&lt;span class="x"&gt;\Hoge::find_get(\org\rhaco\store\db\Q::eq(&amp;quot;id&amp;quot;,1));//\Hogeモデルからid=1のデータを1件取得する命令&lt;/span&gt;
&lt;span class="x"&gt;$queries = \Hoge::stop_record();&lt;/span&gt;
&lt;span class="x"&gt;var_dump($queries);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- more --&gt;

&lt;p&gt;こんな感じで使う。出力は&lt;/p&gt;
&lt;!-- more --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;array(1) {
  [0]=&amp;gt;
  array(2) {
    [0]=&amp;gt;
    string(291) &amp;quot;select t4.&amp;quot;id&amp;quot; as c5,t4.&amp;quot;name&amp;quot; as c10 from hoge t4 where  ( (t4.&amp;quot;id&amp;quot; = ?) )   offset 0 limit 1 &amp;quot;
    [1]=&amp;gt;
    array(1) {
      [0]=&amp;gt;
      string(1) &amp;quot;1&amp;quot;
    }
  }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;みたいに出る&lt;/p&gt;
&lt;h3&gt;あるクラス用に設定したConfを別クラスから参照したい&lt;/h3&gt;
&lt;p&gt;\org\rhaco\Confはクラス用に設定値を決めるのに良く使う。
大体commons/hoge.phpみたいにrhaco3で設定値を書くファイルに書くことが多い。&lt;/p&gt;
&lt;p&gt;例としてFlowクラスでルートURLを設定するには&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;\org\rhaco\Conf::set(&amp;quot;org.rhaco.Flow&amp;quot;,&amp;quot;app_url&amp;quot;,&amp;quot;localhost&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;こんな感じでcommons/hoge.phpに書いたりする。Flowクラス内では&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$app_url = \org\rhaco\Conf::get(&amp;quot;app_url&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で設定した値を読み込める。
他のクラスで読み込みたい場合にどうするか良く分からなかったがソース読んだら分かったのでメモしておく&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$app_url = \org\rhaco\Conf::get(&amp;quot;org.rhaco.Flow@app_url&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでおk。@で区切ってクラス名と取得したい値のキーを書くと値を取って来れる。&lt;/p&gt;</content><category term="rhaco"></category><category term="rhaco3"></category><category term="memo"></category></entry><entry><title>Basic認証する時に気をつけること</title><link href="http://blog.shigepon.info/blog/2014/02/03/basic-auth/" rel="alternate"></link><published>2014-02-03T07:48:33+09:00</published><updated>2014-02-03T07:48:33+09:00</updated><author><name>shigepon</name></author><id>tag:blog.shigepon.info,2014-02-03:/blog/2014/02/03/basic-auth/</id><summary type="html"></summary><content type="html">&lt;p&gt;rhaco3で作ったWebサービス全体にBasic認証をかけた時にちょっとハマったのでメモ。&lt;/p&gt;
&lt;h2&gt;症状&lt;/h2&gt;
&lt;p&gt;rhaco3の認証が入っているサービスで全体にBasic認証をかけると、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;トップページに入る時にBasic認証がかかる&lt;/li&gt;
&lt;li&gt;認証完了&lt;/li&gt;
&lt;li&gt;ログインページに移動&lt;/li&gt;
&lt;li&gt;またBasic認証がかかる&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;というケースが見られました。Webサーバにはnginxを使いました。&lt;/p&gt;
&lt;!-- more --&gt;

&lt;h2&gt;原因&lt;/h2&gt;
&lt;p&gt;nginx側の設定が悪いのかなとか色々試行錯誤しましたが、結論としてrhaco3の認証部分が401のレスポンスを吐いてたのが問題でした。&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;&lt;a href="http://www.slogical.co.jp/tech/http_basicauth.html"&gt;Basic認証の動作&lt;/a&gt;というページで詳しく書かれています（以下に引用します）が&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;ユーザーがクライアント（IE等のWebブラウザ）に目的のURLを入力する。&lt;/li&gt;
&lt;li&gt;クライアントが、Authorization: ヘッダを付加しないで、
目的のコンテンツにアクセスする。&lt;/li&gt;
&lt;li&gt;サーバーは、401 Authorization Required のレスポンスを返して、
クライアントに認証が必要である旨を伝える。&lt;/li&gt;
&lt;li&gt;クライアントがユーザーに ID/PW の入力を求める
（IE等のブラウザが、ポップアップウインドウを出して、
　ID/PW の入力をユーザーに求めるアレです。）&lt;/li&gt;
&lt;li&gt;ユーザーが ID/PW を入力する。&lt;/li&gt;
&lt;li&gt;クライアントが、Authorization: ヘッダに ID/PW の情報を付加
して目的のコンテンツに再度アクセスする。&lt;/li&gt;
&lt;li&gt;サーバが ID/PW を解析して、認証OKであればコンテンツをクライ
アントに返す。&lt;/li&gt;
&lt;li&gt;クライアントがコンテンツを表示して、ユーザーがそれを閲覧する。
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        +------+  1---&amp;gt;  +--------+  2---&amp;gt;  +-------+
        |      |  &amp;lt;---4  |        |  &amp;lt;---3  |       |
        | User |         | Client |         | httpd |
        |      |  5---&amp;gt;  |        |  6---&amp;gt;  |       |
        +------+  &amp;lt;---8  +--------+  &amp;lt;---7  +-------+
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;（コンテンツデータを１つ取得するために、リクエスト・レスポンスの
　やりとりが２回行われています。）&lt;/p&gt;
&lt;p&gt;なお、
Authorization: ヘッダには、
Basic認証の ID と PW とを :（半角のコロン）でつなげた文字列を、
base64した値が格納さています。
（例えば、
　Authorization: Basic dXNlcjAxOnBhc3N3b3JkCg==　といったようになります。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ように、Basic認証ではサーバが401のレスポンスを返すことで、ブラウザ側にポップアップを出させているようです。その為rhaco3の認証部分で401のレスポンスを出した時に認証の情報がリセットされてしまったのではないかと思われます。&lt;/p&gt;
&lt;h2&gt;対処&lt;/h2&gt;
&lt;p&gt;rhaco3の認証部分(\org\rhaco\flow\parts\RequestFlow::do_login)で401を送信していた部分で200を送信することで対処できました。&lt;/p&gt;
&lt;p&gt;rhaco3で見られた症状でしたが、他のフレームワークでも特に何も考えてなかったら引っかかる可能性があります。というかBasic認証とフレームワークの認証両方掛けるとか普通無いですよねそうですよね。&lt;/p&gt;</content><category term="rhaco"></category><category term="nginx"></category></entry></feed>