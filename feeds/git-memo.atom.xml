<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>shigeponが関心のある技術情報など</title><link href="http://blog.thoz.org/" rel="alternate"></link><link href="http://blog.thoz.org/feeds/git-memo.atom.xml" rel="self"></link><id>http://blog.thoz.org/</id><updated>2014-04-09T12:36:49+09:00</updated><entry><title>git memo</title><link href="http://blog.thoz.org/2014/04/09/git-memo/" rel="alternate"></link><updated>2014-04-09T12:36:49+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-04-09:2014/04/09/git-memo/</id><summary type="html">&lt;p&gt;git関連のメモ&lt;/p&gt;
&lt;h3&gt;変更履歴を見る&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git log -p
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で全体の変更履歴&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git log -p filename
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- more --&gt;

&lt;p&gt;でfilenameの変更履歴を表示する&lt;/p&gt;
&lt;h3&gt;ブランチ間の変更ファイル一覧を取得&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git diff --name-only -b parent_branch -b child_branch
//履歴を見る場合
$ git diff --name-only
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="http://qa.atmarkit.co.jp/q/2047"&gt;gitの指定ブランチで変更されたファイルの一覧を取得したい - QA@IT&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;GitHubで色々やる手順&lt;/h2&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kik.xii.jp/archives/179"&gt;Github で Fork してから Pull Request をするまでの流れ | けーこ in サンフランシスコ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://qiita.com/xtetsuji/items/555a1ef19ed21ee42873"&gt;GitHubでFork/cloneしたリポジトリを本家リポジトリに追従する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://misapon.blogspot.jp/2014/10/github.html"&gt;明日に向かって昇龍拳: GitHubでプルリクエストがマージされた後にすること&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1.準備&lt;/h3&gt;
&lt;p&gt;まずは開発に関わりたいプロジェクトのリポジトリをFork&lt;/p&gt;
&lt;p&gt;次にローカルにクローン&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/path/to/repository.git
$ &lt;span class="nb"&gt;cd&lt;/span&gt; repository
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2.開発〜Pull Request&lt;/h3&gt;
&lt;p&gt;Pull Request用にブランチを切る&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout -b issue
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;コード変更後、コミット&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add -A
$ git commit -m &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
$ git push origin issue
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;まだrebeseは良く分かってない。で、GitHub上でPull Requestを作成する。&lt;/p&gt;
&lt;h3&gt;3.Pull Requestが反映された後&lt;/h3&gt;
&lt;h4&gt;Pull Requestに使ったブランチを削除&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout master
$ git branch -D issue
$ git push origin :issue
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;GitHubでForkしたリポジトリを本家に合わせる&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git remote add honke https://github.com/honke/path/to/repository.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;リポジトリの追加は1回で良い。後は合わせたいタイミングで下のコマンドを繰り返す&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git fetch honke
$ git merge honke/master
$ git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下2〜3を繰り返す&lt;/p&gt;
&lt;h3&gt;別の場所に開発中のブランチをダウンロードしたい場合&lt;/h3&gt;
&lt;p&gt;参考：
&lt;a href="http://glassylamp.blogspot.jp/2010/11/git.html"&gt;GlassyLamp: git でブランチを指定してダウンロードする方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;issueブランチをダウンロードしたい場合&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/path/to/repository.git
$ git checkout -b issue-local remotes/origin/issue
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;masterブランチの変更を別ブランチに反映する&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout hoge
$ git merge master
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;mergeでコンフリクトしたファイルの一覧&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git ls-files -u
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;branch名を変更する&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch -m &amp;lt;oldname&amp;gt; &amp;lt;newname&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="http://stackoverflow.com/questions/6591213/how-do-you-rename-the-local-branch"&gt;git - How do you rename the local branch? - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;日本語ファイルの出力&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git config --global core.quotepath &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;と先にやっておくと日本語ファイル名もちゃんと表示される&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://tobysoft.net/wiki/index.php?git%2F%C6%FC%CB%DC%B8%EC%A5%D5%A5%A1%A5%A4%A5%EB%CC%BE%A4%F2git%20status%A4%CA%A4%C9%A4%C7%C9%BD%BC%A8%A4%B9%A4%EB%CA%FD%CB%A1"&gt;git/日本語ファイル名をgit statusなどで表示する方法 - TOBY SOFT wiki&lt;/a&gt;&lt;/p&gt;</summary><category term="git"></category><category term="memo"></category></entry></feed>