<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>shigeponが関心のある技術情報など</title><link href="http://blog.thoz.org/" rel="alternate"></link><link href="http://blog.thoz.org/feeds/memo.atom.xml" rel="self"></link><id>http://blog.thoz.org/</id><updated>2016-03-08T09:50:36+09:00</updated><entry><title>visual studio メモ</title><link href="http://blog.thoz.org/2016/03/08/visual-studio-memo/" rel="alternate"></link><updated>2016-03-08T09:50:36+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2016-03-08:2016/03/08/visual-studio-memo/</id><summary type="html">&lt;h2&gt;Visual Studio 2010でLNK1123エラーが出る&lt;/h2&gt;
&lt;p&gt;Visual Studio Express 2012をインストールした後で、Visual Studio 2010でビルドしようとしたらエラーが出た。&lt;a href="http://www.microsoft.com/ja-jp/download/details.aspx?id=23691"&gt;Visual C++ Service Pack 1&lt;/a&gt;以降をインストールすれば良い。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://minus9d.hatenablog.com/entry/20121212/1355312498"&gt;VS2010でLNK1123エラーが出たら、SP1にしてみよう - minus9d's diary&lt;/a&gt;&lt;/p&gt;</summary><category term="memo"></category><category term="VisualStudio"></category></entry><entry><title>nginx memo</title><link href="http://blog.thoz.org/2014/03/20/nginx-memo/" rel="alternate"></link><updated>2014-03-20T16:04:53+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-03-20:2014/03/20/nginx-memo/</id><summary type="html">&lt;h2&gt;Nginxで503コードのページをカスタマイズする&lt;/h2&gt;
&lt;p&gt;なるべく手軽にメンテナンスページを出すための手順&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;path/to/root/error/503.htmlにページを用意する。&lt;/li&gt;
&lt;li&gt;path/to/root/error/以下に画像やcss、javascriptなど必要なものを用意する。&lt;/li&gt;
&lt;li&gt;nginxの設定を変更する。必要な部分だけ抜粋&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;server &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    server_name xxx.xxx;&lt;/span&gt;
&lt;span class="x"&gt;        set &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;maintenance&lt;/span&gt;&lt;span class="x"&gt; false;&lt;/span&gt;
&lt;span class="x"&gt;        if (-f &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;document_root&lt;/span&gt;&lt;span class="x"&gt;/error/503.html )&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;                set &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;maintenance&lt;/span&gt;&lt;span class="x"&gt; true;&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;        if (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;uri&lt;/span&gt;&lt;span class="x"&gt; ~ &amp;quot;^/error/&amp;quot;) &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;            set &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;maintenance&lt;/span&gt;&lt;span class="x"&gt; false;&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;        if (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;remote_addr&lt;/span&gt;&lt;span class="x"&gt; = XXX.XXX.XXX.XXX )&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;                set &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;maintenance&lt;/span&gt;&lt;span class="x"&gt; false;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;指定したIPからのアクセスは普通に見れるようにする&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;        if (&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;maintenance&lt;/span&gt;&lt;span class="x"&gt; = true) &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;                return 503;&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;        error_page 503 @maintenance;&lt;/span&gt;
&lt;span class="x"&gt;        location @maintenance &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;                rewrite ^(.*)&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt; /error/503.html break;&lt;/span&gt;
&lt;span class="x"&gt;                expires 0;&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;        location /error/ &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;

&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;path/to/root/error/503.htmlがあれば、メンテナンス画面を表示する。なければ表示しない。一度nginx設定をリロードすればその後はリロードの必要もない。&lt;/p&gt;
&lt;h2&gt;末尾に必ずスラッシュを入れる&lt;/h2&gt;
&lt;p&gt;djangoで末尾スラッシュで無い場合に上手くurlsを組み立てられなかったりしたので・・・djangoは悪くなく、自分の実装のせいなんだけど。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rewrite ^([^.]*[^/])$ $1/ permanent;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でおk&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://stackoverflow.com/questions/645853/add-slash-to-the-end-of-every-url-need-rewrite-rule-for-nginx"&gt;regex - Add slash to the end of every url (need rewrite rule for nginx) - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;書式チェック&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -t -c /path/to/nginx.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でチェック出来る&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://qiita.com/yaotti/items/bd6774888a790c00e6fd"&gt;nginxで設定ファイルチェック - Qiita&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;ltsvでログを取る&lt;/h2&gt;
&lt;p&gt;※　まずerror_logでは指定出来ないので注意&lt;/p&gt;
&lt;p&gt;ログのフォーマットにltsvを追加する。/etc/nginx/nginx.conf内でも
/etc/nginx/conf.d/*.conf内でもおk&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;log_format&lt;/span&gt; &lt;span class="nt"&gt;ltsv&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;time:$time_local&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\thost:$remote_addr&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\tforwardedfor:$http_x_forwarded_for&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\treq:$request&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\tstatus:$status&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\tsize:$body_bytes_sent&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\treferer:$http_referer&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\tua:$http_user_agent&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\treqtime:$request_time&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;\tvhost:$host&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sites-available内でのaccess_logの設定を以下のように変更&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;access_log /var/log/nginx/access.log ltsv;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="http://toshitanian.hatenablog.com/entry/2013/10/25/023838"&gt;nginxのerror_logはformat指定できない． - としたにあんの左脳&lt;/a&gt;&lt;/p&gt;</summary><category term="nginx"></category><category term="memo"></category></entry><entry><title>linux command memo</title><link href="http://blog.thoz.org/2014/03/07/linux-command-memo/" rel="alternate"></link><updated>2014-03-07T08:50:21+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-03-07:2014/03/07/linux-command-memo/</id><summary type="html">&lt;h2&gt;アクセスログのIPアドレスを集計してみる&lt;/h2&gt;
&lt;p&gt;参考：&lt;a href="http://blog.livedoor.jp/stock_value/archives/51443839.html"&gt;Linux サーバーでお手軽にログの集計：こっそりと。 - livedoor Blog（ブログ）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google Analyticsでリファラ無しの変なアクセスが増えたので、アクセスログからIPを集計してみた。
アクセスログの書式はLTSVでこんな感じ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Mar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;0900&lt;/span&gt;       &lt;span class="nn"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;11.22.33.46&lt;/span&gt;       &lt;span class="nn"&gt;forwardedfor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="nn"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;GET&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;   &lt;span class="nn"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;      &lt;span class="nn"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="nn"&gt;referer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;ua&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;Mozilla&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;5.0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;***&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="nn"&gt;reqtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.777&lt;/span&gt;   &lt;span class="nn"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nn"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="nn"&gt;vhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;hoge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;fuga&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;なんか色々ソフト使うのとか面倒だったのでgrepとかawkでほげほげした。要はhost:11.22.33.44に当たる箇所を取り出して表示回数をまとめれば良い。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="s s-Atom"&gt;cat&lt;/span&gt; &lt;span class="s s-Atom"&gt;access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;log&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;i&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bot&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;grep&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;referer:-&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;grep&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;status:200&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;awk&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;{print $3}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;uniq&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- more --&gt;

&lt;p&gt;軽くbot避けを入れてるけど、crawlerとかspiderとかを避けておくとより正確になるかも。
これだけだと一杯出てくるので100回以上アクセスあったIPだけ取り出してみた。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="s s-Atom"&gt;cat&lt;/span&gt; &lt;span class="s s-Atom"&gt;access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;log&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;i&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bot&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;grep&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;referer:-&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;grep&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;status:200&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;awk&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;{print $3}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;uniq&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;c&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;grep&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="s s-Atom"&gt;\&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s s-Atom"&gt;\&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s s-Atom"&gt;\s&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ただ、最初の目的には最初の集計の方が役に立った。結局Bingのボットだったみたい。Analyticsではじけなかったアクセスがあったのかな。&lt;/p&gt;
&lt;h2&gt;大きなファイルを探す&lt;/h2&gt;
&lt;p&gt;例：100MB以上のファイルを探す&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ find path -size 100M
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Windows共有フォルダをマウント&lt;/h2&gt;
&lt;p&gt;参考：&lt;a href="http://qiita.com/mdstoy/items/54925cdcbca6d558b666"&gt;Ubuntu から Windows の共有フォルダをマウントして利用する - Qiita&lt;/a&gt;というかほぼそのまま&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo aptitude install cifs-utils
$ sudo mkdir -p /mnt/windows
$ sudo mount -t cifs -o &lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;WindowsUsername,password&lt;span class="o"&gt;=&lt;/span&gt;WindowsPassword //ServerNameOrIp/path/to/share /mnt/windows
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;ファイルのフルパス一覧を取得&lt;/h2&gt;
&lt;p&gt;参考：&lt;a href="http://linux.just4fun.biz/%E9%80%86%E5%BC%95%E3%81%8DUNIX%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%95%E3%83%AB%E3%83%91%E3%82%B9%E5%90%8D%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95.html"&gt;逆引きUNIXコマンド/ファイルのフルパス名を取得する方法 - Linuxと過ごす&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;単純なlsだとファイル名だけが一覧になるので、フルパスの一覧が欲しい場合は一工夫必要&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls -dF /path/to/dir/*
$ find &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; -maxdepth &lt;span class="m"&gt;1&lt;/span&gt; -mindepth 1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;SSHを使ってリモートでコマンド実行する&lt;/h2&gt;
&lt;p&gt;単純なコマンド実行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh username@hostname options... &lt;span class="s2"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ローカルのファイルをリダイレクトしてリモートコマンドに使用する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh username@hostname options... &lt;span class="s2"&gt;&amp;quot;command&amp;quot;&lt;/span&gt; &amp;lt; localfile
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;重複行を削除する&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat hoge &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="http://codenote.net/linux/1300.html"&gt;[Linux] sort と uniq をパイプでつないで重複行を削除する | CodeNote.net&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;文字列置換(sed)関連&lt;/h2&gt;
&lt;h3&gt;一番最初にマッチしたものを置換&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sed 1,/pattern/s/pattern/replace/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;1は1行目からの意味。10行目から始めたければ10に変えるとか、数字はパターンにしても良い&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sed /pattern from/,/pattern/s/pattern/replace/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一行目に文字列を追加する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sed -i hoge -e &lt;span class="s2"&gt;&amp;quot;1i fuga&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考:
&lt;a href="http://d.hatena.ne.jp/n9d/20081110/1226284188"&gt;sedにて一番最初にマッチしたモノだけを置換するには - 計算機と戯れる日々&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;ファイルを上書き保存&lt;/h3&gt;
&lt;p&gt;オプション -iを使う。一括でファイル上書きならこんな感じ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ find . -name &lt;span class="s2"&gt;&amp;quot;*.html&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i -e s/hoge/fuga/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考:
&lt;a href="http://www.dab.hi-ho.ne.jp/sasa/biboroku/unix/sed-i.html"&gt;sedでファイルを上書き保存&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;grepで該当行前後を表示する&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat hoge.txt &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;fuga&amp;quot;&lt;/span&gt; -3 &lt;span class="c1"&gt;#前後3行&lt;/span&gt;
$ cat hoge.txt &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;fuga&amp;quot;&lt;/span&gt; -B &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;#前3行&lt;/span&gt;
$ cat hoge.txt &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;fuga&amp;quot;&lt;/span&gt; -A &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;#後3行&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;sshでポートフォワーディング&lt;/h3&gt;
&lt;p&gt;例えばPostgreSQLのポート5432をローカルの6542にポートフォワードする場合は&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -N -f -L 6543:localhost:5432 username@hostname
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;時刻調整&lt;/h2&gt;
&lt;p&gt;ntpをインストールする必要はない。Ubuntuの場合、ntpdate-debianコマンドがあればいける。ntpdateコマンドだとエラーが出た。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ntpdate
no servers can be used, exiting
$ sudo ntpdate-debian
step &lt;span class="nb"&gt;time&lt;/span&gt; server xxx.xxx.xxx.xxx offset -914.392749 sec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="http://ubuntuforums.org/showthread.php?t=2193509"&gt;[SOLVED] ntpdate - No Servers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ntpサーバを指定するには/etc/default/ntpdateを変更する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NTP_USE_NTP_CONF=no
NTPSERVERS=&amp;quot;ntp.nict.jp&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;毎日のcronjobで動作させる&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo &lt;span class="nb"&gt;cd&lt;/span&gt; /etc/cron.daily
sudo ln -s /etc/network/if-up.d/ntpdate ./ntpdate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でおk
参考：&lt;a href="http://d.hatena.ne.jp/kobapan/20090909/1252472963"&gt;Ubuntu ntpdate 時刻合わせ - ガットポンポコ&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;windows共有フォルダをマウント&lt;/h2&gt;
&lt;p&gt;コマンドはこんな感じ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo aptitude install cifs-utils
$ sudo mount -t cifs -o &lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Windowsユーザー名,password&lt;span class="o"&gt;=&lt;/span&gt;Windowsパスワード,uid&lt;span class="o"&gt;=&lt;/span&gt;Linuxユーザーid,gid&lt;span class="o"&gt;=&lt;/span&gt;Linuxグループid //windows ip/path/to/share /mnt/path/to/share
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;こうしておくとファイルの編集も可能。uidとかgidが無いとrootで共有する。&lt;/p&gt;
&lt;p&gt;linux(ubuntu)起動時に共有したい場合、fstabを編集する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;//windows ip/path/to/share  /mnt/path/to/share  cifs  credentials=/home/username/.windowscredentials,uid=Linuxユーザーid,gid=Linuxグループid,iocharset=utf8  0  0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上のコマンドみたいにWindowsユーザー名、パスワードを入力してもいけるが、fstabは複数人から見ることが出来るので、ユーザーフォルダ内に認証用のファイルを作ってパスワードを隠す&lt;/p&gt;
&lt;p&gt;/home/username/.windowscredentialsを次のようにして600で保存すればおk&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;username=Windowsユーザー名
password=Windowsパスワード
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="https://wiki.ubuntu.com/MountWindowsSharesPermanently"&gt;MountWindowsSharesPermanently - Ubuntu Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;LANで利用されているIPアドレスを調べる&lt;/h2&gt;
&lt;p&gt;arp-scanコマンドを使う。
まずはインストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo aptitude install arp-scan
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使い方&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo arp-scan -I eth0 -l
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;eth0はスキャンしたいネットワークアダプタ&lt;/p&gt;
&lt;h2&gt;csvからカラム切り出し&lt;/h2&gt;
&lt;p&gt;例としてhoge.csvの2カラム目を取り出す&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cut -f &lt;span class="m"&gt;2&lt;/span&gt; hoge.csv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;この場合タブ区切り、カンマ区切りしたい場合は&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cut -d , -f &lt;span class="m"&gt;2&lt;/span&gt; hoge.csv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="http://linux.just4fun.biz/?%E9%80%86%E5%BC%95%E3%81%8DUNIX%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%2F%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%82%92%E6%8A%9C%E3%81%8D%E5%87%BA%E3%81%99#q05e8b64"&gt;逆引きUNIXコマンド/指定したフィールドを抜き出す - Linuxと過ごす&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;csvのソート&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sort --field-separator&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt; --key&lt;span class="o"&gt;=&lt;/span&gt;2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;こうやるとカンマ区切りのデータの2番目のカラムでソートしてくれる&lt;/p&gt;
&lt;p&gt;数値でソートしたい場合は-nをオプションに加える&lt;/p&gt;
&lt;p&gt;逆順の場合は--reverseをオプションに加える&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://stackoverflow.com/questions/9471101/sort-csv-file-by-column-priority-using-the-sort-command"&gt;unix - Sort CSV file by column priority using the "sort" command - Stack Overflow&lt;/a&gt;&lt;/p&gt;</summary><category term="linux"></category><category term="memo"></category></entry><entry><title>vim memo</title><link href="http://blog.thoz.org/2014/03/01/vim-memo/" rel="alternate"></link><updated>2014-03-01T14:14:10+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-03-01:2014/03/01/vim-memo/</id><summary type="html">&lt;h2&gt;vimでsnippet&lt;/h2&gt;
&lt;p&gt;色々方法があるみたいだけど、neocomplecacheを入れているので、それと相性が良さそうな（作者が同じ）プラグインを入れた&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NeoBundle &amp;#39;Shougo/neosnippet&amp;#39;
NeoBundle &amp;#39;Shougo/neosnippet-snippets&amp;#39;

&amp;quot; Plugin key-mappings.
imap &amp;lt;C-k&amp;gt;     &amp;lt;Plug&amp;gt;(neosnippet_expand_or_jump)
smap &amp;lt;C-k&amp;gt;     &amp;lt;Plug&amp;gt;(neosnippet_expand_or_jump)
xmap &amp;lt;C-k&amp;gt;     &amp;lt;Plug&amp;gt;(neosnippet_expand_target)
&amp;quot; &amp;quot; SuperTab like snippets behavior.
imap &amp;lt;expr&amp;gt;&amp;lt;TAB&amp;gt; neosnippet#expandable_or_jumpable() ?
\ &amp;quot;\&amp;lt;Plug&amp;gt;(neosnippet_expand_or_jump)&amp;quot;
\: pumvisible() ? &amp;quot;\&amp;lt;C-n&amp;gt;&amp;quot; : &amp;quot;\&amp;lt;TAB&amp;gt;&amp;quot;
smap &amp;lt;expr&amp;gt;&amp;lt;TAB&amp;gt; neosnippet#expandable_or_jumpable() ?
\ &amp;quot;\&amp;lt;Plug&amp;gt;(neosnippet_expand_or_jump)&amp;quot;
\: &amp;quot;\&amp;lt;TAB&amp;gt;&amp;quot;
&amp;quot;
&amp;quot; &amp;quot; For snippet_complete marker.
if has(&amp;#39;conceal&amp;#39;)
  set conceallevel=2 concealcursor=i
endif
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- more --&gt;

&lt;p&gt;を.vimrcに追記して、vimを再起動後、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:NeoBundleInstall
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でインストール完了。もう一度vimを再起動して、phpファイルを空けて
おもむろにインサートモードで「for」とか打ったらちゃんとsnippetが表示された。&lt;C-n&gt;などで選択してからtab押したらちゃんと入力された。
いいね〜！！&lt;/p&gt;
&lt;p&gt;現在、デフォルトのsnippetとしてneosnippet-snippetsをインストールしないとデフォルトのsnippetを出してくれないことに注意。&lt;/p&gt;
&lt;h2&gt;巨大なファイルを開いて遅くなったりフリーズしない方法&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://qiita.com/shoyan/items/529cf863a0d191be036e"&gt;Vimで巨大なファイルを開く方法 - Qiita&lt;/a&gt;をそのまま&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim -u NONE filename
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でおk&lt;/p&gt;
&lt;h2&gt;clipboardを使う&lt;/h2&gt;
&lt;p&gt;クリップボードで普通にCtrl+vして大体涙目になってるのでメモ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:set paste
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;んで普通にペーストでおkみたい&lt;/p&gt;
&lt;p&gt;戻すには&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:set nopaste
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考：&lt;a href="http://qiita.com/quwa/items/019250dbca167985fe32"&gt;vimでペーストするときインデントさせない - Qiita&lt;/a&gt;&lt;/p&gt;</summary><category term="vim"></category><category term="memo"></category></entry><entry><title>svn memo</title><link href="http://blog.thoz.org/2014/02/11/svn-memo/" rel="alternate"></link><updated>2014-02-11T11:53:32+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-02-11:2014/02/11/svn-memo/</id><summary type="html">&lt;p&gt;svn使っててはまることが結構あるのでメモ&lt;/p&gt;
&lt;h2&gt;ubuntuでsvnコマンドすると認証失敗する場合&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Password &lt;span class="k"&gt;for&lt;/span&gt; ‘&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;’ GNOME keyring:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;というメッセージが表示される場合、gnome-keyringというやつが邪魔をしているらしい。ログイン情報を削除すれば解決。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm ~/.gnome2/keyrings/login.keyring
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- more --&gt;

&lt;p&gt;でいける。&lt;/p&gt;
&lt;h2&gt;コミットするファイルを、ファイルで指定する&lt;/h2&gt;
&lt;p&gt;fuga.htmlとhage.htmlを変更しててfuga.htmlだけコミットしたい場合&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fuga.html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;というファイル(hoge.txt)を作っておいて、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn commit -m &lt;span class="s2"&gt;&amp;quot;コメント&amp;quot;&lt;/span&gt; --targets hoge.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でおk&lt;/p&gt;</summary><category term="linux"></category><category term="svn"></category><category term="memo"></category></entry><entry><title>sqlite memo</title><link href="http://blog.thoz.org/2014/02/11/sqlite-memo/" rel="alternate"></link><updated>2014-02-11T11:48:39+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-02-11:2014/02/11/sqlite-memo/</id><summary type="html">&lt;p&gt;SQLiteでたまに使う操作をメモ&lt;/p&gt;
&lt;h2&gt;テーブルの存在チェック&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;sqlite_master&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;table&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;テーブル名&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="sqlite"></category><category term="memo"></category></entry><entry><title>unity memo</title><link href="http://blog.thoz.org/2014/02/10/unity-memo/" rel="alternate"></link><updated>2014-02-10T23:25:11+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-02-10:2014/02/10/unity-memo/</id><summary type="html">&lt;p&gt;unity使ってこれから何か作っていこうと思うのでめも。&lt;/p&gt;
&lt;h3&gt;最初にやったこと&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://uinyan.com/unity_7days_kusoge_challenge/"&gt;【Unity】素人が7日間クソゲーを作り続けてわかったこと – uinyan. com&lt;/a&gt;に載っていた&lt;a href="http://japan.unity3d.com/developer/document/tutorial/my-first-unity/01.html"&gt;UNITY - Developer - はじめての Unity - 第1回 世界の「骨格」をつくろう&lt;/a&gt;に沿ってブロックとボールを作ってみた。&lt;br /&gt;
実際にどう操作するかは&lt;a href="https://www.google.com/url?q=http://dotinstall.com/&amp;amp;usd=2&amp;amp;usg=AFQjCNHZtbpqtTDbVeGhAQfx3_H-UUYI1Q"&gt;ドットインストールのUnity講座&lt;/a&gt;を参考にした。&lt;/p&gt;
&lt;h3&gt;物をバウンドさせる&lt;/h3&gt;
&lt;p&gt;physicalMaterialでBouncinessに数値を入れる。1とか。1でバウンド時の力のロスが無い。&lt;/p&gt;
&lt;h3&gt;効果音を鳴らす&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.senses-circuit.com/material/se_game.html"&gt;フリー効果音素材HP&lt;/a&gt;などから音源をダウンロード&lt;/li&gt;
&lt;li&gt;Assetに音源をドラッグアンドドロップして追加&lt;/li&gt;
&lt;li&gt;追加したいオブジェクトでAddComponentボタンからComponent&amp;gt;Audio&amp;gt;Audio Sourceを選択&lt;/li&gt;
&lt;li&gt;Audio ClipにAssetに入れた音源を入れる。&lt;/li&gt;
&lt;li&gt;Audio Sourceコンポーネント内で3D Sound Setting&amp;gt;Min Distanceを10くらいに設定 &lt;/li&gt;
&lt;/ul&gt;
&lt;!-- more --&gt;

&lt;p&gt;オブジェクトに設定したコードでは次のように書く。例としてスペースを押したら効果音が出るようにしてみた。&lt;br /&gt;
コードの設定部分でこの例の場合clipに音源を入れる（でないと聞こえなかったような）&lt;/p&gt;
&lt;p&gt;```c#
public AudioClip clip;
public function Update() {
    if (Input.GetButton("Jump")) {
        audio.PlayOneShot(clip); 
    }
}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;### BGMをかける
Assetに追加したBGMをHiearchyに追加して、InspectorのLoopをチェックしたらOK

### 位置移動
transform.positionにVectorオブジェクトを代入すればOK  
transform.position.xに直接値を入れるとC#では怒られた。

### トリガで衝突判定
Collider2Dでis Triggerにチェックを入れるとTriggerを用いて衝突判定できる。衝突しないケースと衝突するケースを使い分けられるので便利。
イベントとして2Dの場合は、

+ OnTriggerEnter2D
+ OnTriggerStay2D
+ OntriggerExit2D

が使える。2Dで物理エンジン使わない時とか使える。なんか使える条件があるような情報があった。

### 時間待ちの作法
コルーチンを使うらしい。

```c#
public function Update(){
...
  StartCoroutine(&amp;quot;GameOver&amp;quot;);
}
private IENumerator GameOver(){
  yield return new WaitForSeconds(2);
  Application.LoadLevel(&amp;quot;GameOver&amp;quot;);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;こんな感じ。時間待ちとは言え、動きが止まったりするわけじゃない。&lt;/p&gt;
&lt;h3&gt;座標変換&lt;/h3&gt;
&lt;p&gt;タップやクリックの座標とUnity内での座標の場合は座標変換が必要。カメラのScreenToWorldPointメソッドを使うが2Dの場合直感的に行かなく、次のようにする&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c#
Vector3 screenPosition = Camera.main.ScreenToWorldPoint(transform.position);
Vector2 clickPosition = Camera.main.ScreenToWorldPoint(new Vector3(Input.mousePosition.x,Input.mousePosition.y,screenPosition.z));&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;と2DなのにVector3（３次元座標）で指定する。&lt;/p&gt;
&lt;h3&gt;デバッグ&lt;/h3&gt;
&lt;p&gt;Unity Remoteを使う。Free Aspectだと上手く表示できないとか上手く行かないケースがあるので注意。かならずアスペクト比？を設定。&lt;/p&gt;
&lt;h3&gt;Androidへの実装&lt;/h3&gt;
&lt;p&gt;実機に実装する場合はBuild and Runをすれば良い。ただしXperia SO-01Bに実装すると初期の設定ではエラーがポコポコ出たので対処をメモしておく&lt;/p&gt;
&lt;h3&gt;iPhoneへの実装&lt;/h3&gt;
&lt;p&gt;iPhoneへの実装はios Developer Programへの登録など色々面倒で複数サイトを参考にした。
ios Developer Programへの登録などUnity関係なくやらないといけない作業は、&lt;a href="http://r-dimension.xsrv.jp/classes_j/ios_test/"&gt;iOSデバイス（iPhone・iPad）実機テスト | Yasushi Noguchi Class&lt;/a&gt;が参考になった&lt;br /&gt;
unity側での作業は&lt;a href="http://tech.gmo-media.jp/post/54095871491/running-unity-app-on-iphone"&gt;iPhone実機でUnityを動かしてみた - unity部 | GMOメディア エンジニアブログ&lt;/a&gt;を参考にすれば上手くいった。
バージョンが変わったりすると、また画面構成とか変わるんだろうけど。&lt;/p&gt;
&lt;p&gt;あとiPhone初心者だったせいで、マナーモードになっているのに気づかず、音が出ないと１時間くらい悩んでた。（これでハマる人は少ないと思うけど一応メモ）&lt;/p&gt;
&lt;h3&gt;iPhoneへのadhocビルドと配布&lt;/h3&gt;
&lt;p&gt;やること色々あるので、参考にしたサイトの一覧を紹介する程度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dev.classmethod.jp/smartphone/iphone/ios-app-how-to-release/#toc-xcode-"&gt;よく分かる！iOS アプリのリリース手順のまとめ ｜ Developers.IO&lt;/a&gt;←App Storeでの配布についてのページだけどこのページが一番参考になった。多分画面が最新のものに対応してるから。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://plus.vc/iphone/4357/"&gt;iPhoneアプリのAd Hoc配信方法まとめ完全版 [Xcode4対応] | PLUS&lt;/a&gt; 上のページで分からないところはこのページを参考にした。Xcodeのビルド設定以降は参考になる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;adhocで端末を追加したい場合に、またもハマった&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://d.hatena.ne.jp/mswar/20090303/1236087158"&gt;iPhone Developper Programingに 新しくデバイス追加する方法(２台目、３台目～) - mswar的電網日誌&lt;/a&gt; adhocじゃないけど、それ以外の部分は参考になった&lt;/li&gt;
&lt;li&gt;&lt;a href="http://plus.vc/iphone/7015/"&gt;Adhocでデバイスを追加したものの、インストールできない場合のチェック方法 | PLUS&lt;/a&gt;これはチェックしておかないといけない感じ&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EGL_BAD_MATCH&lt;/h4&gt;
&lt;p&gt;まずは&lt;strong&gt;EGL_BAD_MATCH&lt;/strong&gt;というエラーが出た。ググっでも答えが出ないので、ddmsを使ってログを取ってみると、どうも32bit Display Bufferとか24bit Display Bufferの処理をした後にエラーが出てたので、Player Setting &amp;gt; Android &amp;gt; Resolution and Presentationにある32bit Dispay Bufferと24bit Display Bufferのチェックをはずした。するとEGL_BAD_MATCHは消えた。&lt;/p&gt;
&lt;h4&gt;Profiler is only supported in Unity Pro&lt;/h4&gt;
&lt;p&gt;次にProfilerも使ってないのに&lt;br /&gt;
&lt;strong&gt;Profiler is only supported in Unity Pro&lt;/strong&gt;&lt;br /&gt;
というメッセージが出た。結局分からなかった。私が実装した時の問題点は画像が表示されないことだったのでこれは関係ないだろうと考えて無視。&lt;/p&gt;
&lt;h4&gt;結局画面が表示されない&lt;/h4&gt;
&lt;p&gt;Build Setting画面のTexture CompressionをDon't overrideからETC1 or RGB16に変更すると動いた！
なんかどっかにこの話があったんだけど、どこか忘れたのでまた思い出したらリンクする。&lt;/p&gt;
&lt;h3&gt;その他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;位置のScaleを-1にして反転するとアニメーションもそのまま反転した。すごい。&lt;/li&gt;
&lt;li&gt;StartよりAwakeが先に呼び出される。初期化に使える。&lt;/li&gt;
&lt;li&gt;MonoDevelop-UnityをMacにインストールしてて、C#の通常アプリが作れると思ったら大間違い。C#のアプリ作ろうと思ったらXamarin Studio入れた方がよさげ。NUnitが無いって怒られて散々だった。&lt;/li&gt;
&lt;/ul&gt;</summary><category term="unity"></category><category term="memo"></category></entry><entry><title>octpress tips</title><link href="http://blog.thoz.org/2014/01/31/octpress-tips/" rel="alternate"></link><updated>2014-01-31T08:33:56+09:00</updated><author><name>shigepon</name></author><id>tag:blog.thoz.org,2014-01-31:2014/01/31/octpress-tips/</id><summary type="html">&lt;p&gt;Octopressのインストール後に行ったカスタマイズをまとめておきます。&lt;/p&gt;
&lt;h2&gt;外部リンクを別ウィンドウで開く&lt;/h2&gt;
&lt;p&gt;下のコードを追加します&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;_inclides&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;custom&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JavaScript&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a[href^=&amp;#39;http&amp;#39;]:not([href*=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;])&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;target&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_blank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- more --&gt;

&lt;p&gt;のようにJavascriptで対応します&lt;/p&gt;
&lt;h2&gt;一覧表示での表示範囲を決めるマークダウン&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!-- more --&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これを書けばおk&lt;/p&gt;</summary><category term="memo"></category><category term="Octopress"></category></entry></feed>