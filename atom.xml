<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[shigeponが関心のある技術情報など]]></title>
  <link href="http://blog.shigepon.com/atom.xml" rel="self"/>
  <link href="http://blog.shigepon.com/"/>
  <updated>2014-03-22T23:41:55+09:00</updated>
  <id>http://blog.shigepon.com/</id>
  <author>
    <name><![CDATA[shigepon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nginx memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/20/nginx-memo/"/>
    <updated>2014-03-20T16:04:53+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/20/nginx-memo</id>
    <content type="html"><![CDATA[<h2>Nginxで503コードのページをカスタマイズする</h2>

<p>なるべく手軽にメンテナンスページを出すための手順</p>

<ul>
<li>path/to/root/error/503.htmlにページを用意する。</li>
<li>path/to/root/error/以下に画像やcss、javascriptなど必要なものを用意する。</li>
<li>nginxの設定を変更する。必要な部分だけ抜粋</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server {
</span><span class='line'>  server_name xxx.xxx;
</span><span class='line'>        set $maintenance false;
</span><span class='line'>        if (-f $document_root/error/503.html ){
</span><span class='line'>                set $maintenance true;
</span><span class='line'>        }
</span><span class='line'>        if ($uri ~ "^/error/") {
</span><span class='line'>            set $maintenance false;
</span><span class='line'>        }
</span><span class='line'>        if ($remote_addr = XXX.XXX.XXX.XXX ){
</span><span class='line'>                set $maintenance false;#指定したIPからのアクセスは普通に見れるようにする
</span><span class='line'>        }
</span><span class='line'>        if ($maintenance = true) {
</span><span class='line'>                return 503;
</span><span class='line'>        }
</span><span class='line'>        error_page 503 @maintenance;
</span><span class='line'>        location @maintenance {
</span><span class='line'>                rewrite ^(.*)$ /error/503.html break;
</span><span class='line'>                expires 0;
</span><span class='line'>        }
</span><span class='line'>        location /error/ {}
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>path/to/root/error/503.htmlがあれば、メンテナンス画面を表示する。なければ表示しない。一度nginx設定をリロードすればその後はリロードの必要もない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rhaco3 memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/15/rhaco3-memo/"/>
    <updated>2014-03-15T13:28:55+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/15/rhaco3-memo</id>
    <content type="html"><![CDATA[<p>rhaco3を使ってる人なんて世界で何人居るのかなと思いつつ、あまりに情報が少ないので、メモ書きしていく。
大きめネタは別記事にまとめるが小さいネタはここに追記する。</p>

<h3>Daoで作ったSQLを確認する方法</h3>

<p>Daoを継承したモデルとして、Hogeモデルがあるとして</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">\Hoge</span><span class="o">::</span><span class="na">start_record</span><span class="p">();</span>
</span><span class='line'><span class="nx">\Hoge</span><span class="o">::</span><span class="na">find_get</span><span class="p">(</span><span class="nx">\org\rhaco\store\db\Q</span><span class="o">::</span><span class="na">eq</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="c1">//\Hogeモデルからid=1のデータを1件取得する命令</span>
</span><span class='line'><span class="nv">$queries</span> <span class="o">=</span> <span class="nx">\Hoge</span><span class="o">::</span><span class="na">stop_record</span><span class="p">();</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$queries</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで使う。出力は</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>array(1) {
</span><span class='line'>  [0]=&gt;
</span><span class='line'>  array(2) {
</span><span class='line'>    [0]=&gt;
</span><span class='line'>    string(291) &quot;select t4.&quot;id&quot; as c5,t4.&quot;name&quot; as c10 from hoge t4 where  ( (t4.&quot;id&quot; = ?) )   offset 0 limit 1 &quot;
</span><span class='line'>    [1]=&gt;
</span><span class='line'>    array(1) {
</span><span class='line'>      [0]=&gt;
</span><span class='line'>      string(1) &quot;1&quot;
</span><span class='line'>    }
</span><span class='line'>  }
</span></code></pre></td></tr></table></div></figure>


<p>みたいに出る</p>

<h3>あるクラス用に設定したConfを別クラスから参照したい</h3>

<p>\org\rhaco\Confはクラス用に設定値を決めるのに良く使う。
大体commons/hoge.phpみたいにrhaco3で設定値を書くファイルに書くことが多い。</p>

<p>例としてFlowクラスでルートURLを設定するには</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">\org\rhaco\Conf</span><span class="o">::</span><span class="na">set</span><span class="p">(</span><span class="s2">&quot;org.rhaco.Flow&quot;</span><span class="p">,</span><span class="s2">&quot;app_url&quot;</span><span class="p">,</span><span class="s2">&quot;localhost&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じでcommons/hoge.phpに書いたりする。Flowクラス内では</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$app_url</span> <span class="o">=</span> <span class="nx">\org\rhaco\Conf</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s2">&quot;app_url&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>で設定した値を読み込める。
他のクラスで読み込みたい場合にどうするか良く分からなかったがソース読んだら分かったのでメモしておく</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$app_url</span> <span class="o">=</span> <span class="nx">\org\rhaco\Conf</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s2">&quot;org.rhaco.Flow@app_url&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでおk。@で区切ってクラス名と取得したい値のキーを書くと値を取って来れる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(4):ビューにBootstrapを使う]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/14/a-way-of-creating-rails-application4/"/>
    <updated>2014-03-14T09:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/14/a-way-of-creating-rails-application4</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://ubiqlog.com/archives/8749">Ruby on Rails 4.0正式リリースとBootstrapの正しい設定法 | ユービックログ研究所</a></li>
<li><a href="http://railscasts.com/episodes/328-twitter-bootstrap-basics?language=ja&amp;view=asciicast">#328 Twitter Bootstrap Basics &ndash; RailsCasts</a></li>
</ul>


<p>今回はそっけない表示画面をそれっぽくするためにビューにBootstrapを当てはめる。</p>

<p>Gemfileを編集</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+gem 'less-rails'
</span><span class='line'>+gem 'twitter-bootstrap-rails'
</span><span class='line'>+gem 'execjs'
</span><span class='line'>-gem 'sass-rails'</span></code></pre></td></tr></table></div></figure>


<p>以下のコマンドを実行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'><span class="nv">$ </span>rails g bootstrap:install
</span><span class='line'><span class="nv">$ </span>rails g bootstrap:layout application
</span></code></pre></td></tr></table></div></figure>


<p>と実行したけど、最後のコマンドはビューを勝手に色々いじるので、しない方が良いかもしれない。上のコマンドを実行すると</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>app/assets/javascripts/application.js
</span><span class='line'>app/assets/javascripts/bootstrap.js.coffee
</span><span class='line'>app/assets/stylesheets/application.css
</span><span class='line'>app/assets/stylesheets/bootstrap_and_overrides.css.less
</span></code></pre></td></tr></table></div></figure>


<p>が出来る。さて、この状態で出力を見ると、ページ上部がナビゲーションバーで隠れてしまった。
app/assets/stylesheets/bootstrap_and_overrides.css.lessを修正することで対処する</p>

<p>変更前</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;twitter/bootstrap/bootstrap&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">@import</span> <span class="s2">&quot;twitter/bootstrap/responsive&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>変更後</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;twitter/bootstrap/bootstrap&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nt">body</span> <span class="p">{</span><span class="k">padding-top</span><span class="o">:</span><span class="m">60px</span><span class="p">;}</span>
</span><span class='line'><span class="k">@import</span> <span class="s2">&quot;twitter/bootstrap/responsive&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでページが隠れなくなる。レイアウト変更にはapp/views/layouts/application.html.erbを編集する必要がある。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(3):データ一覧ページを作って、詳細ページへのリンクを貼る]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application3/"/>
    <updated>2014-03-10T18:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application3</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a></li>
<li><a href="http://qiita.com/somewhatgood@github/items/9890e75b4c195d47715a">Rails &ndash; link_to の引数と展開の違いまとめ &ndash; Qiita</a></li>
</ul>


<p>前回に引き続き<a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a>を参考にしているが、色々すっとばして16章から適当に確認しながら適当に実装する。</p>

<h3>一覧表示</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>と書くとテーブルにあるデータ全て取ってくるらしい（DAOで良くある書式）。
ビューでは@eventsに対してループさせる必要があるので次のような書式になる。
app/views/events/index.html.erbを次のように書き換える</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;Events&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;table class=&quot;table&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;thead&gt;</span>
</span><span class='line'><span class="x">      &lt;th&gt;日時&lt;/th&gt;&lt;th&gt;イベント名&lt;/th&gt;</span>
</span><span class='line'><span class="x">  &lt;/thead&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="vi">@events</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">event</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">      &lt;tr&gt;</span>
</span><span class='line'><span class="x">          &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">event</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y/%m/%d %H:%m&#39;</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">          &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">event</span><span class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;/tr&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>[<a href="http://0.0.0.0:3000/events/index">http://0.0.0.0:3000/events/index</a>]にアクセスすれば一覧が表示される。どこかのページでeachでなくeach_with_indexという書き方してるページあったけど、Rails4では動かなかった。
バージョン違い？</p>

<h3>リンクを貼る</h3>

<p>一覧と詳細を繋げたいので、リンクを貼る。link_toというのを使うらしい。 <a href="http://qiita.com/somewhatgood@github/items/9890e75b4c195d47715a">Rails &ndash; link_to の引数と展開の違いまとめ &ndash; Qiita</a>の「基本」を使えば今回は十分。上のerbを次のように書き換える</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;Events&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;table class=&quot;table&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;thead&gt;</span>
</span><span class='line'><span class="x">      &lt;th&gt;日時&lt;/th&gt;&lt;th&gt;イベント名&lt;/th&gt;&lt;th&gt;link&lt;/th&gt;</span>
</span><span class='line'><span class="x">  &lt;/thead&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="vi">@events</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">event</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">      &lt;tr&gt;</span>
</span><span class='line'><span class="x">          &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">event</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y/%m/%d %H:%m&#39;</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">          &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">event</span><span class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">          &lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">&quot;詳細&quot;</span><span class="p">,</span><span class="ss">:controller</span><span class="o">=&gt;</span><span class="s2">&quot;events&quot;</span><span class="p">,</span><span class="ss">:action</span><span class="o">=&gt;</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="ss">:eventid</span><span class="o">=&gt;</span><span class="n">event</span><span class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;/tr&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>controllerはコントローラー、actionはビュー？かどうか分からないけど、コントローラー内で定義してるメソッド、あとパラメーター名（eventid）はconfig/routes.rbで指定したパラメーター名が使用出来る（と思う）。とりあえずこう作ったけど、最終的にハッシュにした方がいいんだろな。</p>

<h3>一覧の範囲を絞り込む</h3>

<p>テーブルのデータ全部でなく、一部のデータに絞り込んで表示してみる。
日付のデータがあるので、今月のデータに絞り込んでみる。app/controllers/events_controller.rbを編集</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">from</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">at_beginning_of_month</span>
</span><span class='line'>    <span class="n">to</span> <span class="o">=</span> <span class="n">from</span><span class="o">+</span><span class="mi">1</span><span class="o">.</span><span class="n">month</span>
</span><span class='line'>    <span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">all</span><span class="p">(</span><span class="ss">:conditions</span><span class="o">=&gt;[</span><span class="s2">&quot;date&gt;=? and date&lt;=?&quot;</span><span class="p">,</span><span class="n">from</span><span class="p">,</span><span class="n">to</span><span class="o">]</span><span class="p">,</span><span class="ss">:order</span><span class="o">=&gt;</span><span class="s1">&#39;date&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここらへんは<a href="http://waka.hatenablog.com/entry/2013/04/05/083349">ActiveRecordで日付の範囲指定 &ndash; yo_waka&rsquo;s blog</a>を参考にしながら適当に実装した。ActiveRecordは色んな表現方法があるのでどうしたもんかな。ただ、数字も何でもオブジェクトってのは面白い。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(2):データベースにPostgreSQLを使ってみた]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application2/"/>
    <updated>2014-03-10T18:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application2</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a></li>
<li><a href="http://www.oiax.jp/rails3book/setup_postgresql.html">データベースとの接続（PostgreSQL編） &ndash; Ruby on Rails with OIAX</a></li>
<li><a href="http://qiita.com/stkn_bb/items/72d06c149d3e6f315f8c">[Rails]既存のMySQLテーブルに接続する方法 &ndash; Qiita</a></li>
</ul>


<p>前回に引き続き<a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a>を参考にしているが、色々すっとばしてデータベースを作るところをなぞる。
どうもモデルを作って、コマンド打ったら自動的にテーブル作ってくれてよしなにしてくれるらしい。</p>

<p>ではモデルを作る。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rails g model event name:string date:timestamp
</span></code></pre></td></tr></table></div></figure>


<p>モデルは単数型の英語で書くのが良いらしい。idは書かなくても自動で設定してくれるらしい。コマンドを実行すると次のようなファイルが出来る</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>app/models/event.rb
</span><span class='line'>db/migrate/20140310033758_create_events.rb
</span></code></pre></td></tr></table></div></figure>


<p>後でテーブルの生成が上手く行かない場合に、変数の型で変なのを設定してる場合とかあるので、migrateフォルダのファイルを修正すると上手くいくことがある。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake db:migrate
</span></code></pre></td></tr></table></div></figure>


<p>と打ったらテーブルが出来た。めでたしめでたし・・・と思ったらそういえばリモートサーバ上のPostgreSQLテーブルにデータ入れてたのを思い出したので、sqliteからPostgreSQLに使用データベースを変更してみる。</p>

<p><a href="http://www.oiax.jp/rails3book/setup_postgresql.html">データベースとの接続（PostgreSQL編） &ndash; Ruby on Rails with OIAX</a>を参考にしたが、PostgreSQLの設定までは終了しているので、その後の部分をやってみた。</p>

<h3>Gemfileを編集</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem <span class="s2">&quot;sqlite3&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>を</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem <span class="s2">&quot;pg&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>に変更して、bundle installを実行。すると何かエラーが・・・メッセージを見ると<a href="http://qiita.com/youcune/items/5b783f7fde45d0fd4b35">Ruby &ndash; gem install pgしてNo pg_configとなる対処法 &ndash; Qiita</a>が参考になりそうなので、libpq-devを入れてエラーを解消した（Ubuntuの場合)</p>

<h3>config/database.yamlを編集</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">development</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">adapter</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sqlite3</span>
</span><span class='line'>  <span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">db/development.sqlite3</span>
</span><span class='line'>  <span class="l-Scalar-Plain">pool</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>  <span class="l-Scalar-Plain">timeout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5000</span>
</span></code></pre></td></tr></table></div></figure>


<p>みたいな箇所を</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">development</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">adapter</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">postgresql</span>
</span><span class='line'>  <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">000.000.00.00</span>
</span><span class='line'>  <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5432</span>
</span><span class='line'>  <span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">bocho</span>
</span><span class='line'>  <span class="l-Scalar-Plain">username</span><span class="p-Indicator">:</span> <span class="err">****</span>
</span><span class='line'>  <span class="l-Scalar-Plain">password</span><span class="p-Indicator">:</span> <span class="err">****</span>
</span><span class='line'>  <span class="l-Scalar-Plain">pool</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>  <span class="l-Scalar-Plain">timeout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5000</span>
</span></code></pre></td></tr></table></div></figure>


<p>に変更した。development以外にtest, productionと項目があって、それぞれ同じように変更した。これがどう違うのかはまだ勉強してない。localhostの場合はhost,portは要らないみたい。</p>

<h3>テーブル名の変更</h3>

<p>良く考えたら、PostgreSQLに保存してるデータのテーブルはeventsじゃなくてbochoだったので、そういう設定もしないといけない。その方法は<a href="http://qiita.com/stkn_bb/items/72d06c149d3e6f315f8c">[Rails]既存のMySQLテーブルに接続する方法 &ndash; Qiita</a>を参考にした。eventモデル(app/models/event.rb)を次のように変更</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Event</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">table_name</span> <span class="o">=</span> <span class="s1">&#39;bocho&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>なんかググったら他の書式もあったけど、それだとエラー出たので、今はこの書き方なのかな？
これで準備が出来たので、テーブルからデータを読み込んで表示してみる</p>

<h3>データ読み込み</h3>

<p>app/controllers/events_controller.rbを次のように書き換え</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@event</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">:id</span><span class="o">=&gt;</span><span class="n">params</span><span class="o">[</span><span class="ss">:eventid</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これ多分</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="vi">@event</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:eventid</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>でもいける。</p>

<h3>データ表示</h3>

<p>app/views/events/show.html.erbを編集</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;Event&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;dl&gt;</span>
</span><span class='line'><span class="x">  &lt;dt&gt;日時&lt;/dt&gt;</span>
</span><span class='line'><span class="x">  &lt;dd&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@event</span><span class="o">[</span><span class="ss">:date</span><span class="o">].</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y/%m/%d %H:%m&#39;</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x">&lt;/dd&gt;</span>
</span><span class='line'><span class="x">  &lt;dt&gt;イベント名&lt;/dt&gt;</span>
</span><span class='line'><span class="x">  &lt;dd&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@event</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x">&lt;/dd&gt;</span>
</span><span class='line'><span class="x">&lt;/dl&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;dd&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@event</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y/%m/%d %H:%m&#39;</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x">&lt;/dd&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>でもおk</p>

<p>以上の作業後に [<a href="http://0.0.0.0:3000/events/show/1">http://0.0.0.0:3000/events/show/1</a>]にアクセスすると
id=1,date=2014/03/01 10:00:00,name=ほげ
というデータが入っていた場合、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Event<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;dl&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dt&gt;</span>日時<span class="nt">&lt;/dt&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dd&gt;</span>2014/03/01 10:00<span class="nt">&lt;/dd&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dt&gt;</span>イベント名<span class="nt">&lt;/dt&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dd&gt;</span>ほげ<span class="nt">&lt;/dd&gt;</span>
</span><span class='line'><span class="nt">&lt;/dl&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>と表示されたりする。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(1):とりあえずRailsアプリを作ってみた]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application/"/>
    <updated>2014-03-10T18:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a></li>
<li><a href="http://www.oiax.jp/rails3book/setup_postgresql.html">データベースとの接続（PostgreSQL編） &ndash; Ruby on Rails with OIAX</a></li>
<li><a href="http://qiita.com/stkn_bb/items/72d06c149d3e6f315f8c">[Rails]既存のMySQLテーブルに接続する方法 &ndash; Qiita</a></li>
<li><a href="http://ubiqlog.com/archives/8749">Ruby on Rails 4.0正式リリースとBootstrapの正しい設定法 | ユービックログ研究所</a></li>
<li><a href="http://railscasts.com/episodes/328-twitter-bootstrap-basics?language=ja&amp;view=asciicast">#328 Twitter Bootstrap Basics &ndash; RailsCasts</a></li>
<li><a href="http://qiita.com/somewhatgood@github/items/9890e75b4c195d47715a">Rails &ndash; link_to の引数と展開の違いまとめ &ndash; Qiita</a></li>
</ul>


<p>基本的なところは<a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a>をなぞってみる。
ただし、PostgreSQLの既存テーブルを使い、テンプレートにBootstrapを使うので、途中から色々やることが変わっている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rails new bocho
</span></code></pre></td></tr></table></div></figure>


<p><a href="">Ruby on Railsを入れてみた</a>に注意点であげたようにGemfileからtherubyracerに関する行をコメントアウトしてbundle install
これをしないとrails g controllerコマンドで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>autodetect<span class="s1">&#39;: Could not find a Javascript runtime. ...&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>というエラーが出た</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rails g controller events index show
</span></code></pre></td></tr></table></div></figure>


<p>と入力してビューとコントローラーを作った。これの意味はeventsというコントローラーとindex、showというビューを作る。ビューはスペース区切りで複数書けるみたい。indexはデータ一覧、showは個別データの表示を意味している
ファイルとしては</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>app/controllers/events_controller.rb
</span><span class='line'>app/views/events/index.html.erb
</span><span class='line'>app/views/events/show.html.erb
</span></code></pre></td></tr></table></div></figure>


<p>が出来る。events_controller.rbにはindexとshowメソッドが入っている</p>

<h3>確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rails s
</span></code></pre></td></tr></table></div></figure>


<p>でサーバを起動させて、[<a href="http://0.0.0.0:3000/events/index">http://0.0.0.0:3000/events/index</a>]と[<a href="http://0.0.0.0:3000/events/show">http://0.0.0.0:3000/events/show</a>]を確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Events##index
</span><span class='line'>Find me in app/view/events/index.html.erb
</span></code></pre></td></tr></table></div></figure>


<p>みたいなメッセージが出てたらおk</p>

<h3>コントローラー、ビューを修正</h3>

<p>ビューって言っていいのかテンプレートなのか良くわからないけどapp/views/events/show.html.erbを修正</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@event</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x">&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで[<a href="http://0.0.0.0:3000/events/show">http://0.0.0.0:3000/events/show</a>]を確認するとエラーが表示される。</p>

<p>@eventが登録されてないので、コントローラーで登録する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@event</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>          <span class="vi">@event</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;hoge&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでさっきのURLにアクセスすると</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>hoge<span class="nt">&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>と表示される。なるほど@変数名に値を入れたらテンプレでアクセス出来るようになるのね。</p>

<h3>URLにパラメーターを入れる</h3>

<p>テーブルのidが1のデータを[<a href="http://0.0.0.0:3000/events/show/1">http://0.0.0.0:3000/events/show/1</a>]で表示出来るように考える。
そのためにはconfig/routes.rbを</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="n">get</span> <span class="s2">&quot;events/show/&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="n">get</span> <span class="s2">&quot;events/show/:eventid&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;events#show&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こうすると上のURLにアクセスするとevents_controller.rbのshowメソッド内でparams[:eventid]に1が入る
events_controller.rbを次のように変えると</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@event</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>          <span class="vi">@event</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:eventid</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>[<a href="http://0.0.0.0:3000/events/show/1">http://0.0.0.0:3000/events/show/1</a>]にアクセスすると</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>1<span class="nt">&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>と表示されるようになる。（あくまでこういうコードはテスト用）
とりあえずここまで</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Analyticsからbotアクセスを取り除く]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/09/how-to-block-bot-access-from-google-analytics/"/>
    <updated>2014-03-09T21:53:40+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/09/how-to-block-bot-access-from-google-analytics</id>
    <content type="html"><![CDATA[<p>参考ページ<a href="http://www.lunametrics.com/blog/2013/09/05/filter-bots-google-analytics/#sr=d&amp;m=n&amp;cp=d&amp;ct=-tmc&amp;ts=1394369739">How to Block Bots from Your Google Analytics</a></p>

<p>ここ数日Google Analyticsにアメリカからリファラ無し直帰率100%近くのアクセスを大量に発見。
どう考えてもbotですどうも(ry
本当はGoogle Analyticsに自動でフィルタして欲しいけど、どうもフィルタしてないので、自力でフィルタ設定しないといけないみたい。</p>

<p>上のリンクを参考に設定してみる</p>

<ul>
<li>アナリティクス設定→ ビュー→フィルタと移動</li>
<li>「新しいボタン」をクリック</li>
</ul>


<h3>設定は以下の通り</h3>

<ul>
<li>新しいフィルタを作成</li>
<li>フィルタ名：適当（Smart Bot 除外）とか？</li>
<li>フィルタの種類：カスタムフィルタ</li>
<li>除外</li>
<li>フィルタフィールド：ISPドメインからのトラフィック</li>
<li>フィルタパターン：<sup>microsoft corp(oration)?|inktomi corporation|yahoo! inc.|google inc.|stumbleupon inc.</sup>$|gomez</li>
<li><p>大文字小文字を区別：いいえ</p></li>
<li><p>「保存」をクリック</p></li>
</ul>


<p>これでフィルタできるけど、フィルタをかける以前の情報には反映しない。
参考ページに設定テンプレートがあったのでここでもリンクしておく
<a href="https://www.google.com/analytics/web/template?uid=svscm2YdTe6s0yJeGHQM4Q">Smart Botを除外するテンプレート</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux command memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/07/linux-command-memo/"/>
    <updated>2014-03-07T08:50:21+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/07/linux-command-memo</id>
    <content type="html"><![CDATA[<h2>アクセスログのIPアドレスを集計してみる</h2>

<p>参考：<a href="http://blog.livedoor.jp/stock_value/archives/51443839.html">Linux サーバーでお手軽にログの集計：こっそりと。 &ndash; livedoor Blog（ブログ）</a></p>

<p>Google Analyticsでリファラ無しの変なアクセスが増えたので、アクセスログからIPを集計してみた。
アクセスログの書式はLTSVでこんな感じ</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>time:07/Mar/2014:06:25:22 +0900       host::11.22.33.46       forwardedfor:-  req:GET / HTTP/1.1   status:200      size:1       referer:-ua:Mozilla/5.0 (***)      reqtime:0.777   cache:- runtime:-       vhost:hoge.fuga</span></code></pre></td></tr></table></div></figure>


<p>なんか色々ソフト使うのとか面倒だったのでgrepとかawkでほげほげした。要はhost:11.22.33.44に当たる箇所を取り出して表示回数をまとめれば良い。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat access.log | grep -v -i "bot" | grep "referer:-" | grep "status:200" | awk '{print $3}' | sort | uniq -c</span></code></pre></td></tr></table></div></figure>


<p>軽くbot避けを入れてるけど、crawlerとかspiderとかを避けておくとより正確になるかも。
これだけだと一杯出てくるので100回以上アクセスあったIPだけ取り出してみた。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat access.log | grep -v -i "bot" | grep "referer:-" | grep "status:200" | awk '{print $3}' | sort | uniq -c | grep "[0-9]\{3,\}\s"</span></code></pre></td></tr></table></div></figure>


<p>ただ、最初の目的には最初の集計の方が役に立った。結局Bingのボットだったみたい。Analyticsではじけなかったアクセスがあったのかな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/01/vim-memo/"/>
    <updated>2014-03-01T14:14:10+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/01/vim-memo</id>
    <content type="html"><![CDATA[<h2>vimでsnippet</h2>

<p>色々方法があるみたいだけど、neocomplecacheを入れているので、それと相性が良さそうな（作者が同じ）プラグインを入れた</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NeoBundle 'Shougo/neosnippet'
</span><span class='line'>NeoBundle 'Shougo/neosnippet-snippets'
</span><span class='line'>
</span><span class='line'>" Plugin key-mappings.
</span><span class='line'>imap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_or_jump)
</span><span class='line'>smap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_or_jump)
</span><span class='line'>xmap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_target)
</span><span class='line'>" " SuperTab like snippets behavior.
</span><span class='line'>imap &lt;expr&gt;&lt;TAB&gt; neosnippet#expandable_or_jumpable() ?
</span><span class='line'>\ "\&lt;Plug&gt;(neosnippet_expand_or_jump)"
</span><span class='line'>\: pumvisible() ? "\&lt;C-n&gt;" : "\&lt;TAB&gt;"
</span><span class='line'>smap &lt;expr&gt;&lt;TAB&gt; neosnippet#expandable_or_jumpable() ?
</span><span class='line'>\ "\&lt;Plug&gt;(neosnippet_expand_or_jump)"
</span><span class='line'>\: "\&lt;TAB&gt;"
</span><span class='line'>"
</span><span class='line'>" " For snippet_complete marker.
</span><span class='line'>if has('conceal')
</span><span class='line'>  set conceallevel=2 concealcursor=i
</span><span class='line'>endif</span></code></pre></td></tr></table></div></figure>


<p>を.vimrcに追記して、vimを再起動後、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:NeoBundleInstall</span></code></pre></td></tr></table></div></figure>


<p>でインストール完了。もう一度vimを再起動して、phpファイルを空けて
おもむろにインサートモードで「for」とか打ったらちゃんとsnippetが表示された。&lt;C-n>などで選択してからtab押したらちゃんと入力された。
いいね〜！！</p>

<p>現在、デフォルトのsnippetとしてneosnippet-snippetsをインストールしないとデフォルトのsnippetを出してくれないことに注意。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dbext.vimでpostgresqlにアクセスする]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/28/vim-dbext-postgresql/"/>
    <updated>2014-02-28T11:48:20+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/28/vim-dbext-postgresql</id>
    <content type="html"><![CDATA[<p>ググってみたけど無かったのでメモ。
単純に.vimrcに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>let dbext_default_profile=""
</span><span class='line'>let dbext_default_type="PGSQL"
</span><span class='line'>let dbext_default_user="username"
</span><span class='line'>let dbext_default_passwd="password"
</span><span class='line'>let dbext_default_dbname="dbname"
</span><span class='line'>let dbext_default_host="host"
</span><span class='line'>let dbext_default_port="port"</span></code></pre></td></tr></table></div></figure>


<p>と入力してvimを再起動して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="p">:</span><span class="k">Select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">hoge</span> <span class="k">limit</span> <span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>と何かのテーブルから１行だけ出力してみようとしてみたけど</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">dbext</span><span class="p">:</span><span class="n">PostgreSQL</span> <span class="n">requires</span> <span class="n">a</span> <span class="s1">&#39;$HOME/.pgpass&#39;</span> <span class="n">file</span> <span class="k">in</span> <span class="k">order</span> <span class="k">to</span> <span class="n">authenticate</span><span class="p">.</span> <span class="n">This</span> <span class="n">file</span> <span class="k">is</span> <span class="n">missing</span><span class="p">.</span> <span class="n">If</span> <span class="n">you</span> <span class="k">are</span> <span class="k">using</span> <span class="n">a</span> <span class="k">local</span> <span class="k">connection</span><span class="p">,</span> <span class="n">you</span> <span class="n">can</span> <span class="k">create</span> <span class="n">an</span> <span class="n">empty</span> <span class="p">.</span><span class="n">pgpass</span> <span class="n">file</span><span class="p">.</span>  <span class="n">The</span> <span class="n">b</span>
</span><span class='line'><span class="n">inary</span> <span class="s1">&#39;psql&#39;</span> <span class="n">does</span> <span class="k">not</span> <span class="n">accept</span> <span class="n">commandline</span> <span class="n">passwords</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>というエラーメッセージが！
どうもpsqlがコマンドラインでパスワードを受け付けないので、パスワード設定しても意味ないみたい。
なので、~/.pgpassに</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">host</span><span class="p">:</span><span class="n">port</span><span class="p">:</span><span class="n">dbname</span><span class="p">:</span><span class="n">username</span><span class="p">:</span><span class="n">password</span>
</span></code></pre></td></tr></table></div></figure>


<p>を入力したらエラー無く動いた。良かった良かった。
ちなみに.vimrcに書いたパスワード設定を消すと、それはそれでパスワード聞かれるので残しておいた方がいい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsを入れてみた]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/26/rails-startup/"/>
    <updated>2014-02-26T14:51:16+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/26/rails-startup</id>
    <content type="html"><![CDATA[<p>rhaco使わないでWebサービス作るならもうPHP使わずに他の言語でやってみようかなと思い、
DjangoとRailsを迷ったあげく、ChefでRuby使うからRubyの勉強という意味を込めてRailsでやってみることにした。</p>

<p>とりあえずまずはインストール出来ないと話にならないので、Railsをインストールしてみた話。</p>

<p>Ubuntu使ってるので、aptitude install railsでさくっと終わるかなと思ってTwitterで何となく</p>

<blockquote><p>shigepon: railsはバージョンいくつを使うと吉なんでしょ？</p></blockquote>

<p>とつぶやいたら、@sugamasaoさんから</p>

<blockquote><p>sugamasao: @shigepon しがらみがなければ、最新の4.0.2が良いと思います。お試しで触って見るなら、4.1のbeta版を使って見ても良いかもしれません〜</p></blockquote>

<p>という話が！そうなるとrubyも2系入れないとダメじゃん！と思いつつ</p>

<blockquote><p>shigepon: @sugamasao ただ、うちのubuntuのrubyが1.8なので、まずは2.0にしないといけないっすね。</p></blockquote>

<p>とボヤいたら、やっぱり</p>

<blockquote><p>sugamasao: @shigepon なるほど〜！1.8系はもうオワコンなので、2系を入れたほうが良いですねwちなみに、いまは2.1がリリースされてます！</p></blockquote>

<p>とのお達しが。んじゃ2系入れるかとググりながらインストールしてみた。
参考にしたページは次のとおり</p>

<ul>
<li><a href="http://qiita.com/emadurandal/items/a60886152a4c99ce1017">Rails開発環境の構築（rbenvでRuby導入からBundler、Rails導入まで） &ndash; Qiita</a></li>
<li><a href="http://stackoverflow.com/questions/19031633/starting-the-rails-sqlite3-error">Starting the rails, sqlite3 Error &ndash; Stack Overflow</a></li>
<li><a href="http://kiyotakagoto.hatenablog.com/entry/2013/05/28/235727">rails server 時に `autodetect&#8217;: Could not find a JavaScript runtime が出たら。 &ndash; 人生ずっと勉強</a></li>
</ul>


<h3>手順</h3>

<p>行ったり来たりしてるからこんな感じでスッと出来てないけど、だいたいこんな感じ</p>

<h4>rbenvインストール</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
</span><span class='line'>mkdir -p ~/.rbenv/plugins
</span><span class='line'>git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</span></code></pre></td></tr></table></div></figure>


<p>~/.profileに以下を追加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;$HOME/.rbenv/bin:$PATH&quot;</span>
</span><span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>んで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">source</span> ~/.profile
</span></code></pre></td></tr></table></div></figure>


<p>opensslは入ってたから特に何もしなかったけど必要なら</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo aptitude install openssl
</span></code></pre></td></tr></table></div></figure>


<p>iconv, readlineは最初から入ってるんじゃないかな？
んでインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo rbenv install -l
</span><span class='line'>rbenv install 2.1.0
</span><span class='line'>rbenv global 2.1.0
</span></code></pre></td></tr></table></div></figure>


<p>rbenvで何かやったら</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<p>を忘れずに</p>

<h3>Bundlerインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rbenv <span class="nb">exec </span>gem install bundler
</span><span class='line'>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<h3>Railsインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle init
</span><span class='line'>vim Gemfile
</span></code></pre></td></tr></table></div></figure>


<p>Gemfile内に</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem rails <span class="s2">&quot;4.0.2&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>を追加。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle install --path vendor/bundle
</span><span class='line'>bundle <span class="nb">exec </span>new hoge --skip-bundle
</span><span class='line'>rm -f Gemfile
</span><span class='line'>rm -f Gemfile.lock
</span><span class='line'>rm -rf .bundle
</span><span class='line'>rm -rf vendor/bundle
</span><span class='line'><span class="nb">cd </span>hoge
</span><span class='line'>bundle install --path vendor/bundle
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;/vendor/bundle&#39;</span> &gt;&gt; .gitignore
</span><span class='line'>bundle <span class="nb">exec </span>rails server
</span></code></pre></td></tr></table></div></figure>


<p>で途中下のようにハマりながら起動を確認した。</p>

<h3>はまったポイント</h3>

<p>Ruby on Railsをインストールする時にプロジェクトのディレクトリで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle install -path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>すると、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>        /usr/bin/ruby1.9.1 extconf.rb
</span><span class='line'>checking <span class="k">for </span>sqlite3.h... no
</span><span class='line'>sqlite3.h is missing. Try <span class="s1">&#39;port install sqlite3 +universal&#39;</span>
</span><span class='line'>or <span class="s1">&#39;yum install sqlite-devel&#39;</span> and check your shared library search path <span class="o">(</span>the
</span><span class='line'>location where your sqlite3 shared library is located<span class="o">)</span>.
</span><span class='line'>*** extconf.rb failed ***
</span><span class='line'>Could not create Makefile due to some reason, probably lack of
</span><span class='line'>necessary libraries and/or headers.  Check the mkmf.log file <span class="k">for </span>more
</span><span class='line'>details.  You may need configuration options.
</span><span class='line'>
</span><span class='line'>Provided configuration options:
</span><span class='line'>    --with-opt-dir
</span><span class='line'>    --without-opt-dir
</span><span class='line'>    --with-opt-include
</span><span class='line'>    --without-opt-include<span class="o">=</span><span class="k">${</span><span class="nv">opt</span><span class="p">-dir</span><span class="k">}</span>/include
</span><span class='line'>    --with-opt-lib
</span><span class='line'>    --without-opt-lib<span class="o">=</span><span class="k">${</span><span class="nv">opt</span><span class="p">-dir</span><span class="k">}</span>/lib
</span><span class='line'>    --with-make-prog
</span><span class='line'>    --without-make-prog
</span><span class='line'>    --srcdir<span class="o">=</span>.
</span><span class='line'>    --curdir
</span><span class='line'>    --ruby<span class="o">=</span>/usr/bin/ruby1.9.1
</span><span class='line'>    --with-sqlite3-dir
</span><span class='line'>    --without-sqlite3-dir
</span><span class='line'>    --with-sqlite3-include
</span><span class='line'>    --without-sqlite3-include<span class="o">=</span><span class="k">${</span><span class="nv">sqlite3</span><span class="p">-dir</span><span class="k">}</span>/include
</span><span class='line'>    --with-sqlite3-lib
</span><span class='line'>    --without-sqlite3-lib<span class="o">=</span><span class="k">${</span><span class="nv">sqlite3</span><span class="p">-dir</span><span class="k">}</span>/lib
</span><span class='line'>    --enable-local
</span><span class='line'>    --disable-local
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Gem files will remain installed in /home/helio/.bundler/tmp/23089/gems/sqlite3-1.3.8 <span class="k">for </span>inspection.
</span><span class='line'>Results logged to /home/helio/.bundler/tmp/23089/gems/sqlite3-1.3.8/ext/sqlite3/gem_make.out
</span><span class='line'>
</span><span class='line'>An error occurred <span class="k">while </span>installing sqlite3 <span class="o">(</span>1.3.8<span class="o">)</span>, and Bundler
</span><span class='line'>cannot <span class="k">continue</span>.
</span><span class='line'>Make sure that <span class="sb">`</span>gem install sqlite3 -v <span class="s1">&#39;1.3.8&#39;</span><span class="sb">`</span> succeeds before
</span><span class='line'>bundling.
</span></code></pre></td></tr></table></div></figure>


<p>というエラーが出たのは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo aptitude install sqlite3 libsqlite3-dev
</span><span class='line'>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>で出なくなった。インストールパスの指定が無ければpathオプションは要らない。</p>

<p>bundle exec rails serverで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>autodetect<span class="err">&#39;</span>: Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs <span class="k">for </span>a list of available runtimes. <span class="o">(</span>ExecJS::RuntimeUnavailable<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>というエラーが出て、サーバを起動出来なかった。これは
プロジェクトに入っているGemfileに書いてあるtherubyracerに関する行をコメントアウトして</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>とすれば起動出来るようになった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[svn memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/11/svn-memo/"/>
    <updated>2014-02-11T11:53:32+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/11/svn-memo</id>
    <content type="html"><![CDATA[<p>svn使っててはまることが結構あるのでメモ</p>

<h2>ubuntuでsvnコマンドすると認証失敗する場合</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Password <span class="k">for</span> ‘<span class="o">(</span>null<span class="o">)</span>’ GNOME keyring:
</span></code></pre></td></tr></table></div></figure>


<p>というメッセージが表示される場合、gnome-keyringというやつが邪魔をしているらしい。ログイン情報を削除すれば解決。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rm ~/.gnome2/keyrings/login.keyring
</span></code></pre></td></tr></table></div></figure>


<p>でいける。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sqlite memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/11/sqlite-memo/"/>
    <updated>2014-02-11T11:48:39+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/11/sqlite-memo</id>
    <content type="html"><![CDATA[<p>SQLiteでたまに使う操作をメモ</p>

<h2>テーブルの存在チェック</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">sqlite_master</span> <span class="k">WHERE</span> <span class="k">type</span><span class="o">=</span><span class="s1">&#39;table&#39;</span> <span class="k">AND</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;テーブル名&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[unity memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/10/unity-memo/"/>
    <updated>2014-02-10T23:25:11+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/10/unity-memo</id>
    <content type="html"><![CDATA[<p>unity使ってこれから何か作っていこうと思うのでめも。</p>

<h3>最初にやったこと</h3>

<p><a href="http://uinyan.com/unity_7days_kusoge_challenge/">【Unity】素人が7日間クソゲーを作り続けてわかったこと – uinyan. com</a>に載っていた<a href="http://japan.unity3d.com/developer/document/tutorial/my-first-unity/01.html">UNITY &ndash; Developer &ndash; はじめての Unity &ndash; 第1回 世界の「骨格」をつくろう</a>に沿ってブロックとボールを作ってみた。<br/>
実際にどう操作するかは<a href="https://www.google.com/url?q=http://dotinstall.com/&amp;usd=2&amp;usg=AFQjCNHZtbpqtTDbVeGhAQfx3_H-UUYI1Q">ドットインストールのUnity講座</a>を参考にした。</p>

<h3>物をバウンドさせる</h3>

<p> physicalMaterialでBouncinessに数値を入れる。1とか。1でバウンド時の力のロスが無い。</p>

<h3>効果音を鳴らす</h3>

<ul>
<li><a href="http://www.senses-circuit.com/material/se_game.html">フリー効果音素材HP</a>などから音源をダウンロード</li>
<li>Assetに音源をドラッグアンドドロップして追加</li>
<li>追加したいオブジェクトでAddComponentボタンからComponent>Audio>Audio Sourceを選択</li>
<li>Audio ClipにAssetに入れた音源を入れる。</li>
<li>Audio Sourceコンポーネント内で3D Sound Setting>Min Distanceを10くらいに設定</li>
</ul>


<p>オブジェクトに設定したコードでは次のように書く。例としてスペースを押したら効果音が出るようにしてみた。<br/>
コードの設定部分でこの例の場合clipに音源を入れる（でないと聞こえなかったような）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="n">AudioClip</span> <span class="n">clip</span><span class="p">;</span>
</span><span class='line'><span class="k">public</span> <span class="n">function</span> <span class="nf">Update</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">Input</span><span class="p">.</span><span class="n">GetButton</span><span class="p">(</span><span class="s">&quot;Jump&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">audio</span><span class="p">.</span><span class="n">PlayOneShot</span><span class="p">(</span><span class="n">clip</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>BGMをかける</h3>

<p>Assetに追加したBGMをHiearchyに追加して、InspectorのLoopをチェックしたらOK</p>

<h3>位置移動</h3>

<p>transform.positionにVectorオブジェクトを代入すればOK<br/>
transform.position.xに直接値を入れるとC#では怒られた。</p>

<h3>トリガで衝突判定</h3>

<p>Collider2Dでis Triggerにチェックを入れるとTriggerを用いて衝突判定できる。衝突しないケースと衝突するケースを使い分けられるので便利。
イベントとして2Dの場合は、</p>

<ul>
<li>OnTriggerEnter2D</li>
<li>OnTriggerStay2D</li>
<li>OntriggerExit2D</li>
</ul>


<p>が使える。2Dで物理エンジン使わない時とか使える。なんか使える条件があるような情報があった。</p>

<h3>時間待ちの作法</h3>

<p>コルーチンを使うらしい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="n">function</span> <span class="nf">Update</span><span class="p">(){</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>  <span class="n">StartCoroutine</span><span class="p">(</span><span class="s">&quot;GameOver&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">private</span> <span class="n">IENumerator</span> <span class="nf">GameOver</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">yield</span> <span class="k">return</span> <span class="k">new</span> <span class="nf">WaitForSeconds</span><span class="p">(</span><span class="m">2</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Application</span><span class="p">.</span><span class="n">LoadLevel</span><span class="p">(</span><span class="s">&quot;GameOver&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じ。時間待ちとは言え、動きが止まったりするわけじゃない。</p>

<h3>座標変換</h3>

<p>タップやクリックの座標とUnity内での座標の場合は座標変換が必要。カメラのScreenToWorldPointメソッドを使うが2Dの場合直感的に行かなく、次のようにする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">Vector3</span> <span class="n">screenPosition</span> <span class="p">=</span> <span class="n">Camera</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">ScreenToWorldPoint</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">);</span>
</span><span class='line'><span class="n">Vector2</span> <span class="n">clickPosition</span> <span class="p">=</span> <span class="n">Camera</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">ScreenToWorldPoint</span><span class="p">(</span><span class="k">new</span> <span class="n">Vector3</span><span class="p">(</span><span class="n">Input</span><span class="p">.</span><span class="n">mousePosition</span><span class="p">.</span><span class="n">x</span><span class="p">,</span><span class="n">Input</span><span class="p">.</span><span class="n">mousePosition</span><span class="p">.</span><span class="n">y</span><span class="p">,</span><span class="n">screenPosition</span><span class="p">.</span><span class="n">z</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>と2DなのにVector3（３次元座標）で指定する。</p>

<h3>デバッグ</h3>

<p>Unity Remoteを使う。Free Aspectだと上手く表示できないとか上手く行かないケースがあるので注意。かならずアスペクト比？を設定。</p>

<h3>Androidへの実装</h3>

<p>実機に実装する場合はBuild and Runをすれば良い。ただしXperia SO-01Bに実装すると初期の設定ではエラーがポコポコ出たので対処をメモしておく</p>

<h3>iPhoneへの実装</h3>

<p>iPhoneへの実装はios Developer Programへの登録など色々面倒で複数サイトを参考にした。
ios Developer Programへの登録などUnity関係なくやらないといけない作業は、<a href="http://r-dimension.xsrv.jp/classes_j/ios_test/">iOSデバイス（iPhone・iPad）実機テスト | Yasushi Noguchi Class</a>が参考になった<br/>
unity側での作業は<a href="http://tech.gmo-media.jp/post/54095871491/running-unity-app-on-iphone">iPhone実機でUnityを動かしてみた &ndash; unity部 | GMOメディア エンジニアブログ</a>を参考にすれば上手くいった。
バージョンが変わったりすると、また画面構成とか変わるんだろうけど。</p>

<p>あとiPhone初心者だったせいで、マナーモードになっているのに気づかず、音が出ないと１時間くらい悩んでた。（これでハマる人は少ないと思うけど一応メモ）</p>

<h3>iPhoneへのadhocビルドと配布</h3>

<p>やること色々あるので、参考にしたサイトの一覧を紹介する程度。</p>

<ul>
<li><a href="http://dev.classmethod.jp/smartphone/iphone/ios-app-how-to-release/#toc-xcode-">よく分かる！iOS アプリのリリース手順のまとめ ｜ Developers.IO</a>←App Storeでの配布についてのページだけどこのページが一番参考になった。多分画面が最新のものに対応してるから。</li>
<li><a href="http://plus.vc/iphone/4357/">iPhoneアプリのAd Hoc配信方法まとめ完全版 [Xcode4対応] | PLUS</a> 上のページで分からないところはこのページを参考にした。Xcodeのビルド設定以降は参考になる。</li>
</ul>


<p>adhocで端末を追加したい場合に、またもハマった</p>

<ul>
<li><a href="http://d.hatena.ne.jp/mswar/20090303/1236087158">iPhone Developper Programingに 新しくデバイス追加する方法(２台目、３台目～) &ndash; mswar的電網日誌</a> adhocじゃないけど、それ以外の部分は参考になった</li>
<li><a href="http://plus.vc/iphone/7015/">Adhocでデバイスを追加したものの、インストールできない場合のチェック方法 | PLUS</a>これはチェックしておかないといけない感じ</li>
</ul>


<h4>EGL_BAD_MATCH</h4>

<p>まずは<strong>EGL_BAD_MATCH</strong>というエラーが出た。ググっでも答えが出ないので、ddmsを使ってログを取ってみると、どうも32bit Display Bufferとか24bit Display Bufferの処理をした後にエラーが出てたので、Player Setting > Android > Resolution and Presentationにある32bit Dispay Bufferと24bit Display Bufferのチェックをはずした。するとEGL_BAD_MATCHは消えた。</p>

<h4>Profiler is only supported in Unity Pro</h4>

<p>次にProfilerも使ってないのに<br/>
<strong>Profiler is only supported in Unity Pro</strong><br/>
というメッセージが出た。結局分からなかった。私が実装した時の問題点は画像が表示されないことだったのでこれは関係ないだろうと考えて無視。</p>

<h4>結局画面が表示されない</h4>

<p>Build Setting画面のTexture CompressionをDon&rsquo;t overrideからETC1 or RGB16に変更すると動いた！
なんかどっかにこの話があったんだけど、どこか忘れたのでまた思い出したらリンクする。</p>

<h3>その他</h3>

<ul>
<li>位置のScaleを-1にして反転するとアニメーションもそのまま反転した。すごい。</li>
<li>StartよりAwakeが先に呼び出される。初期化に使える。</li>
<li>MonoDevelop-UnityをMacにインストールしてて、C#の通常アプリが作れると思ったら大間違い。C#のアプリ作ろうと思ったらXamarin Studio入れた方がよさげ。NUnitが無いって怒られて散々だった。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic認証する時に気をつけること]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/03/basic-auth/"/>
    <updated>2014-02-03T07:48:33+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/03/basic-auth</id>
    <content type="html"><![CDATA[<p>rhaco3で作ったWebサービス全体にBasic認証をかけた時にちょっとハマったのでメモ。</p>

<h2>症状</h2>

<p>rhaco3の認証が入っているサービスで全体にBasic認証をかけると、</p>

<ol>
<li>トップページに入る時にBasic認証がかかる</li>
<li>認証完了</li>
<li>ログインページに移動</li>
<li>またBasic認証がかかる</li>
</ol>


<p>というケースが見られました。Webサーバにはnginxを使いました。</p>

<h2>原因</h2>

<p>nginx側の設定が悪いのかなとか色々試行錯誤しましたが、結論としてrhaco3の認証部分が401のレスポンスを吐いてたのが問題でした。</p>

<p><a href="http://www.slogical.co.jp/tech/http_basicauth.html">Basic認証の動作</a>というページで詳しく書かれています（以下に引用します）が</p>

<blockquote><ol>
<li>ユーザーがクライアント（IE等のWebブラウザ）に目的のURLを入力する。</li>
<li>クライアントが、Authorization: ヘッダを付加しないで、
目的のコンテンツにアクセスする。</li>
<li>サーバーは、401 Authorization Required のレスポンスを返して、
クライアントに認証が必要である旨を伝える。</li>
<li>クライアントがユーザーに ID/PW の入力を求める
（IE等のブラウザが、ポップアップウインドウを出して、
　ID/PW の入力をユーザーに求めるアレです。）</li>
<li>ユーザーが ID/PW を入力する。</li>
<li>クライアントが、Authorization: ヘッダに ID/PW の情報を付加
して目的のコンテンツに再度アクセスする。</li>
<li>サーバが ID/PW を解析して、認証OKであればコンテンツをクライ
アントに返す。</li>
<li>クライアントがコンテンツを表示して、ユーザーがそれを閲覧する。</li>
</ol>
</blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    +------+  1---&gt;  +--------+  2---&gt;  +-------+
</span><span class='line'>    |      |  &lt;---4  |        |  &lt;---3  |       |
</span><span class='line'>    | User |         | Client |         | httpd |
</span><span class='line'>    |      |  5---&gt;  |        |  6---&gt;  |       |
</span><span class='line'>    +------+  &lt;---8  +--------+  &lt;---7  +-------+</span></code></pre></td></tr></table></div></figure>


<blockquote><p>（コンテンツデータを１つ取得するために、リクエスト・レスポンスの
　やりとりが２回行われています。）</p>

<p>なお、
Authorization: ヘッダには、
Basic認証の ID と PW とを :（半角のコロン）でつなげた文字列を、
base64した値が格納さています。
（例えば、
　Authorization: Basic dXNlcjAxOnBhc3N3b3JkCg==　といったようになります。）</p></blockquote>

<p>ように、Basic認証ではサーバが401のレスポンスを返すことで、ブラウザ側にポップアップを出させているようです。その為rhaco3の認証部分で401のレスポンスを出した時に認証の情報がリセットされてしまったのではないかと思われます。</p>

<h2>対処</h2>

<p>rhaco3の認証部分(\org\rhaco\flow\parts\RequestFlow::do_login)で401を送信していた部分で200を送信することで対処できました。</p>

<p>rhaco3で見られた症状でしたが、他のフレームワークでも特に何も考えてなかったら引っかかる可能性があります。というかBasic認証とフレームワークの認証両方掛けるとか普通無いですよねそうですよね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octpress tips]]></title>
    <link href="http://blog.shigepon.com/blog/2014/01/31/octpress-tips/"/>
    <updated>2014-01-31T08:33:56+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/01/31/octpress-tips</id>
    <content type="html"><![CDATA[<p>Octpressのインストール後に行ったカスタマイズをまとめておきます。</p>

<h2>外部リンクを別ウィンドウで開く</h2>

<p>下のコードを追加します</p>

<figure class='code'><figcaption><span>:source/_inclides/custom/head.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">language</span><span class="o">=</span><span class="s2">&quot;JavaScript&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;a[href^=&#39;http&#39;]:not([href*=&#39;&quot;</span> <span class="o">+</span> <span class="nx">location</span><span class="p">.</span><span class="nx">hostname</span> <span class="o">+</span> <span class="s2">&quot;&#39;])&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">,</span> <span class="s1">&#39;_blank&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようにJavascriptで対応します</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[なでしこで実行ファイルを作る時のメモ]]></title>
    <link href="http://blog.shigepon.com/blog/2014/01/30/nadesiko-make-exe/"/>
    <updated>2014-01-30T09:22:46+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/01/30/nadesiko-make-exe</id>
    <content type="html"><![CDATA[<ul>
<li>パックファイル作る時はメインになるファイルだけnadesiko.nakoというパック名にして、その他はファイル名自身をパック名とする</li>
<li>データを埋め込む場合は、そのデータを呼び出す時にフルパスにしない。データが無いと言われる。</li>
</ul>


<p>何となくマニュアル見ても分かりにくかったのでメモ</p>

<p>ついでにリンク</p>

<p><a href="http://nadesi.com">なでしこ</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[なでしこ2のプラグインを作る方法]]></title>
    <link href="http://blog.shigepon.com/blog/2014/01/29/nadesiko2-make-plugin/"/>
    <updated>2014-01-29T09:49:17+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/01/29/nadesiko2-make-plugin</id>
    <content type="html"><![CDATA[<p>なでしこ2でプラグインを作りたい人向けというニッチすぎるネタです。現在なでしこの時期バージョンなでしこ2が開発中です(えらい長いこと開発中です)が、構文の実装がある程度終わっているので、プラグインを開発することが出来ます。try catchの実装どうするかなーとか考えて進んでないですが、それはそれ。</p>

<p>なでしこ2はC#で組まれているので、プラグインもC#で組むことができます。</p>

<p>まずは準備として、なでしこ2のソースをsvnでチェックアウトします。 <a href="http://code.google.com/p/nadesiko2/source/checkout">URL</a></p>

<p>SharpDevelopで開発中なので、SharpDevelopでソリューションを開きます。で、中にNakoPluginXXXというプロジェクトがあるので、それを参考にすれば良いわけですが、軽く説明しておきます。</p>

<p>プラグインのソースは下のようになります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/*
</span><span class='line'> * Created by SharpDevelop.
</span><span class='line'> * User: shigepon
</span><span class='line'> * Date: 2011/04/04
</span><span class='line'> * Time: 9:42
</span><span class='line'> *
</span><span class='line'> * To change this template use Tools | Options | Coding | Edit Standard Headers.
</span><span class='line'> */
</span><span class='line'>using System;
</span><span class='line'>using System.Collections.Generic;
</span><span class='line'>using System.Text;
</span><span class='line'>using Libnako.JPNCompiler;
</span><span class='line'>using NakoPlugin;
</span><span class='line'>namespace NakoPluginSample{
</span><span class='line'>    public class NakoPluginSample : INakoPlugin    {
</span><span class='line'>  string _description = &quot;サンプルプラグイン&quot;;
</span><span class='line'>        double _version = 1.0;
</span><span class='line'>        //&lt;del&gt; プラグイン共通の部分 &lt;/del&gt;
</span><span class='line'>        public double TargetNakoVersion { get { return 2.0; } }
</span><span class='line'>        public bool Used { get; set; }
</span><span class='line'>        public string Name { get { return this.GetType().FullName; } }
</span><span class='line'>        public double PluginVersion { get { return _version; } }
</span><span class='line'>        public string Description { get { return _description; } }
</span><span class='line'>        //&lt;del&gt; 関数の定義 &lt;/del&gt;
</span><span class='line'>        public void DefineFunction(INakoPluginBank bank)        {
</span><span class='line'>            bank.AddFunc({関数名}&cedil; {なでしこ形式の引数}&cedil; {戻り値の形式}&cedil; {実際の呼び出し先}&cedil;{関数の説明}&cedil; {関数のよみかた});
</span><span class='line'>        }
</span><span class='line'>  // プラグインの初期化処理
</span><span class='line'>        public void PluginInit(INakoInterpreter runner)        {
</span><span class='line'>        }
</span><span class='line'>        // プラグインの終了処理
</span><span class='line'>        public void PluginFin(INakoInterpreter runner)        {
</span><span class='line'>        }
</span><span class='line'>       public Object {実際の処理}(INakoFuncCallInfo info){
</span><span class='line'>            ...
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>実装時に大事なとこを説明します。</p>

<p>+まずプラグイン共通部分とPluginInit、PluginFinはコピペでもかまわないと思います。私もまだ初期処理、終了処理の必要なプラグインは作っていません。
+なでしこ上での関数呼び出し方法の定義はDefineFunctionで行います。bank.AddFuncメソッドで関数を追加できます。メソッド内の引数は下のように設定します。
++関数名はなでしこで呼び出す名前になります。（例：文字検索）なでしこで使う助詞を使わないとか、他の命令の名称とかぶらないなどの制限があります。
++なでしこ形式の引数は「SでAを」のようになでしこで一般的に使う形式で指定します。引数を参照渡しにしたい場合は「{参照渡し}SでAを」のように指定します。助詞を複数指定したい場合は「SでAを|Sが」という形式で指定します。参照渡しを使う場合は実装が少々複雑になります。後日やり方を書こうと思います。
++戻り値の形式はenum NakoVarTypeで指定します。(Void&cedil; Int&cedil; Double&cedil; String&cedil; Array)
++実際の呼び出し先はそのままメソッド名を指定します。(_hogeとか)
++関数の説明と関数のよみかたは分かりやすさの為に必要です。個人用なら適当でも良いと思います。（多分今後エディタとかそういうのにつかわれると思います）
+実際の処理は必ずINakoFuncCallInfo型のインスタンスを引数に取ります。なでしこで渡された引数はこのインスタンスから取得します。取得方法は以下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>long l = info.StackPopAsInt();
</span><span class='line'>double d = info.StackPopAsDouble();
</span><span class='line'>String s = info.StackPopAsString();
</span><span class='line'>Object o = info.StackPop();//配列の場合はこれを使う</span></code></pre></td></tr></table></div></figure>


<p>StackPopメソッドで得られる値はNakoVariable型なので、ちょっと扱いが難しくなります。実際の処理の実装方法はまた今度</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C#で作ったdllをなでしこで使う]]></title>
    <link href="http://blog.shigepon.com/blog/2014/01/28/nadesiko-plugin-cs2/"/>
    <updated>2014-01-28T22:42:43+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/01/28/nadesiko-plugin-cs2</id>
    <content type="html"><![CDATA[<p>C#のdllを呼び出せるように、C#のdllを参照した後、Plugin.cppの一部を以下のように書き換えました</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PHiValue __stdcall sample01(DWORD param) {
</span><span class='line'>  PHiValue result;
</span><span class='line'>  ClassLibrary1::Class1::Method1();
</span><span class='line'>  result = nako_var_new(NULL);
</span><span class='line'>  hi_setStr(result&cedil; &quot;abc&quot;&cedil; sizeof(&quot;abc&quot;));
</span><span class='line'>  return result;
</span><span class='line'>}
</span><span class='line'>NAKO_API(void) ImportNakoFunction(void) {
</span><span class='line'>  // ユーザー命令の追加
</span><span class='line'>  nako_addFunction(&quot;sample01&quot;&cedil;&quot;&quot;&cedil; sample01&cedil; 0);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>なでしこ側のソースは以下のようにして呼び出してみました</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>結果=sample01
</span><span class='line'>結果を言う</span></code></pre></td></tr></table></div></figure>


<p>これでダイアログボックスに「method1」が表示され、続いて「abc」が表示されればOKです。</p>

<p>しかし・・・結果は外部例外　E0434F4Dを出力してちゃんと動きませんでしたorz。この例外はtry&hellip;catchで掴もうとしても掴めません。どうも処理の関数（ここではsample01）に入った瞬間にエラーを返してしまうようです。ちなみにこのコードでググっても原因は理解できませんでした。ということで、クジラ飛行机氏（なでしこ作者）にメールで泣きつきました。</p>

<p>すると</p>

<blockquote><p>vnako.exe と同じフォルダに配置したらエラー出ませんでした。たぶん、plug-ins フォルダにパスを通さない限り、DLLがもう一方を参照できなくなるのだと思います。</p></blockquote>

<p>という返事が！まじで！？と思い試してみると・・・上手くいくじゃないですか！これでC#で作ったdllもなでしこで利用できるようになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C#で作ったdllをC++/CLIで使う]]></title>
    <link href="http://blog.shigepon.com/blog/2014/01/28/nadesiko-plugin-cs/"/>
    <updated>2014-01-28T22:27:58+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/01/28/nadesiko-plugin-cs</id>
    <content type="html"><![CDATA[<p><strong>画像やファイルが無くなっていますがご了承下さい</strong></p>

<p>なでしこでプラグインを作る時にC#を使いたかったので、本格的にdllを作る前に、C++/CLIからMessageBoxを表示する程度のC#のdllを呼び出してみました。</p>

<p>C#のdllコード</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>using System;
</span><span class='line'>using System.Collections.Generic;
</span><span class='line'>using System.Windows.Forms;
</span><span class='line'>using System.Text;
</span><span class='line'>namespace ClassLibrary1{
</span><span class='line'>    public class Class1
</span><span class='line'>    {
</span><span class='line'>        public static void Method1()
</span><span class='line'>        {
</span><span class='line'>            MessageBox.Show(&quot;method1&quot;);
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>C++フォームアプリケーション</p>

<p>C#で作ったdllの参照とかフォームの構成とか画像が消えちゃったので適当に想像してください。
用はC++のアプリケーションでC#のdllを参照します。</p>

<p>ボタンクリック時のコード</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>private: System::Void button1_Click(System::Object^  sender&cedil; System::EventArgs^  e) {
</span><span class='line'>   try{
</span><span class='line'>      ClassLibrary1::Class1::Method1();
</span><span class='line'>   }catch(Exception^ e){
</span><span class='line'>      System::Windows::Forms::MessageBox::Show(e-&gt;Message);
</span><span class='line'>   }
</span><span class='line'> }</span></code></pre></td></tr></table></div></figure>


<p>で動かしてみるときちんと動かせました。</p>
]]></content>
  </entry>
  
</feed>
