<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: memo | shigeponが関心のある技術情報など]]></title>
  <link href="http://blog.shigepon.info/blog/categories/memo/atom.xml" rel="self"/>
  <link href="http://blog.shigepon.info/"/>
  <updated>2016-01-06T09:34:02+09:00</updated>
  <id>http://blog.shigepon.info/</id>
  <author>
    <name><![CDATA[shigepon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript memo]]></title>
    <link href="http://blog.shigepon.info/blog/2015/08/12/javascript-memo/"/>
    <updated>2015-08-12T09:01:59+09:00</updated>
    <id>http://blog.shigepon.info/blog/2015/08/12/javascript-memo</id>
    <content type="html"><![CDATA[<p>Javascript関連のメモ</p>

<h2>HighChartで日本時間をx軸に利用</h2>

<p>チャートを表示するライブラリに<a href="http://www.highcharts.com/">HighChart</a>ってのを使ってるけど、横軸の時間がUTCになってしまうので、ちょっとはまった。</p>

<p>こうすればいいらしい</p>

<p>```js
Highcharts.setOptions({</p>

<pre><code>global: {
    useUTC: false
}
</code></pre>

<p>});
var chart = new HighChart(&hellip;);
```</p>

<p>グローバルな設定として使うらしい。
参考（ほぼそのまま）<a href="http://mtc.hatenablog.com/">mtcdotcom&rsquo;s blog</a></p>

<h2>HighChartでチャートをクリックするとUncaught TypeError: undefined is not a functionが出る</h2>

<p>Chromeでのみ確認。Google翻訳の拡張機能を切ればおk</p>

<p>参考：<a href="http://stackoverflow.com/questions/30498335/highcharts-always-console-error-ablout-bubble-compiled-js">javascript &ndash; highcharts always console error ablout bubble_compiled.js? &ndash; Stack Overflow</a></p>

<h2>bootstrap3のタブ変更時に何か実行したい</h2>

<p>タブの中身を表示する時に何か実行させたい時は次のようにすればおk</p>

<p>```html</p>

<ul class="nav nav-tabs">
 <li class="active"><a href="#tab1" data-toggle="tab">Tab1</a></li>
 <li ><a href="#tab2" data-toggle="tab">Tab2</a></li>
</ul>


<div class="tab-content">
 <div class="tab-pane active" id="tab1">
   Tab1 content
 </div>
 <div class="tab-pane" id="tab2">
   Tab2 content
 </div>
</div>


<script>
$('a[data-toggle="tab"]').on('shown.bs.tab', function(e){
    ...
});
</script>


<p>```</p>

<p>shown.bs.tabってイベントがあるらしい。</p>

<p>参考：<a href="http://stackoverflow.com/questions/20705905/bootstrap-3-jquery-event-for-active-tab-change">Bootstrap 3 jquery event for active tab change &ndash; Stack Overflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[uwsgiメモ]]></title>
    <link href="http://blog.shigepon.info/blog/2015/03/05/uwsgi-memo/"/>
    <updated>2015-03-05T10:21:54+09:00</updated>
    <id>http://blog.shigepon.info/blog/2015/03/05/uwsgi-memo</id>
    <content type="html"><![CDATA[<p>uwsgi関連ではまった点などをメモ</p>

<h2>invalid request block size</h2>

<p>ajaxでサーバ側からデータを読み込むライブラリを使ってると、条件によって502エラーが出てる(=大体djangoとかのプログラム側のエラーで出る)ので、uwsgiのログを調べると、invalid request block sizeというエラーが出てた。</p>

<p>んで、調べてみると、uwsgiがリクエストのサイズが大きすぎるとエラーを吐いているらしい。ライブラリ側で勝手にパラメーター付けて送られてリクエストのサイズが大きくなっているので、こりゃ調整しないとなということで調べてみた。起動時にオプション設定するか、iniファイルで設定したらいけるらしい</p>

<p><code>sh
$ uwsgi --buffer-size=xxxx
</code></p>

<!-- more -->


<p><code>ini
...
buffer-size= xxxx
...
</code></p>

<!-- more -->


<p>参考：<a href="http://stackoverflow.com/questions/15878176/uwsgi-invalid-request-block-size">uwsgi invalid request block size &ndash; Stack Overflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django Memo]]></title>
    <link href="http://blog.shigepon.info/blog/2014/11/23/django-memo/"/>
    <updated>2014-11-23T22:35:38+09:00</updated>
    <id>http://blog.shigepon.info/blog/2014/11/23/django-memo</id>
    <content type="html"><![CDATA[<p>Djangoやってて忘れっぽいところとかをメモ</p>

<h2>リクエストパラメーターをモデルに入れる</h2>

<p>```py views.py
def a_view(request):</p>

<pre><code>hoge = Fuga(request.GET) #新たにインスタンス作る場合
fuga = Fuga.objects.get(pk=1)
hage = Fuga(request.GET,instance=fuga) #既にあるインスタンスに入れる場合
</code></pre>

<p>```</p>

<p>instance=xxxとやるのを何度か忘れた＞＜</p>

<!-- more -->


<h2>forms.DateFieldでISO-8601フォーマットの入力を受入れる</h2>

<p>html5でdatetime-localとか扱おうとすると、入力値がISO-8601形式になって、そのままだとDateFieldが入力をdatetimeの正しい形式として認識してくれない。</p>

<p>で、input_formatsを設定するといけるらしいんだけど、あまりマニュアルでちゃんと説明してない。Stack Overflowの情報とかをググると設定方法が間違ってるコードとかあって、正しいのが良く分からない。で、結局色々調べたら</p>

<p><code>py models.py
date = forms.DateField(input_formats=('%Y-%m-%dT%H:%M:%S',))
</code></p>

<p>とタプルで渡す必要があるらしい</p>

<p>参考：<a href="http://labs.uechoco.com/blog/2011/08/django-dateform-inputs_format-wrong.html">うえちょこ＠ぼろぐ» [Django]forms.DateFieldのinputs_formatではまった</a></p>

<h2>ModelForm使ってフォーム出力する時にrequeied属性をテンプレートで参照するとか</h2>

<p><code>py models.py
hoge = forms.CharField(max_length=100,widget=TextInput(attrs={"required":"true"}))↲
</code></p>

<p>こんな感じで定義したフィールドの属性取ってきたい場合、</p>

<p><code>html
\{\% for field in form \%\}
  \{\% if field.field.required \%\}&lt;p&gt;必須&lt;/p&gt;\{\% endif \%\}
\{\% endfor \%\}
</code></p>

<p>適当だけど、こんな感じでアクセスできる。</p>

<h2>DjangoでGroup By</h2>

<p>DjangoでGroup Byして何個かのフィールドのデータで例えば、日付とその日に登録したデータの件数だけ欲しい時</p>

<p>```py views.py
q = Hoge.objects.filter(date<strong>gte = date).filter(date</strong>lt = dto).extra({&lsquo;date&rsquo;:&ldquo;date_trunc(&lsquo;day&rsquo;,date)&rdquo;})
q.query.group_by = [&lsquo;date&rsquo;]
values = q.values(&lsquo;date&rsquo;).order_by().annotate(c = Count(&lsquo;id&rsquo;))</p>

<p>こんな感じでいける。ちなみにPostgreSQL。dateが時間の情報も持っているのでPostgreSQLのdate_trunc関数を使ってdateを日付の情報だけにしてから、group_byする。
annotateは集計した値を新しいフィールド（ここだとc）に入れる。
例えばvalues[0].cでアクセスできる。このコードで、日付とその日に登録したデータ件数が入った辞書のリストを得ることが出来る
```</p>

<h2>QuerySetで吐いたクエリを出力</h2>

<p><code>py views.py
h = Hoge.objects.all()
print h.query
</code></p>

<p>でおk。でもクエリが例外出す時には出せないような・・・</p>

<p>debug_toolbar使えば見れるか</p>

<p>参考：<a href="http://programmer-jobs.blogspot.jp/2013/01/djangosql.html">Djangoで、デバック用のSQLクエリの表示 一言多いプログラマーの独り言</a></p>

<h2>ModelFormでcleanを使ってデータの検証する時に、updateしようとしてるかcreateしようとしてるか判断する</h2>

<p>createの時だけチェックしたかったので、色々調べてみたらclean(self)内で、self.instanceでチェックすると良いみたい。例えばプライマリーキーでidがある場合こんな感じ</p>

<p>```py models.py
class Hoge(forms.ModelForm):</p>

<pre><code>def clean(self):
    cleaned_data = self.cleaned_data
    if self.instance.id is None:
        #create用の処理
        raise ValidationError('例外出すのはこんな感じ')
    else:
        #update用の処理
    return cleaned_data
</code></pre>

<p>```</p>

<p>instanceの型チェックする方が正攻法かも。例外のメッセージは</p>

<p>```py views.py
def test(request):</p>

<pre><code>form = Hoge(request.POST)
if form.is_valid():
    #例外が無かった場合
else:
    for k,v in form.errors.item():
        #kが例外のフィールド。cleanの場合は__all__
        #vが例外のメッセージ
</code></pre>

<p>```</p>

<p>みたいな感じで取り出せる。</p>

<h2>runserver実行時にコンソールにスタックとレースを出力する</h2>

<p>```py settings.py
LOGGING={</p>

<pre><code>'version':1,
'handlers':{
    'console':{
        'level':'DEBUG',
        'class':'logging.StreamHandler',
    },
},
'loggers':{
    'django.request':{
        'handlers':['console'],
        'propagate':True,
        'level':'DEBUG',
    }
},
</code></pre>

<p>}
```
これを書いておけばコンソールにスタックトレースを出力してくれる。apiのコード書いてる時とかajaxで呼び出してる場合とかに便利。</p>

<p>参考：<a href="http://stackoverflow.com/questions/5886275/print-a-stack-trace-to-stdout-on-errors-in-django-while-using-manage-py-runserve">python &ndash; Print a stack trace to stdout on errors in Django while using manage.py runserver &ndash; Stack Overflow</a>というかここのコード丸コピー</p>

<h2>Gmail送信</h2>

<p><code>py settings.py
EMAIL_USE_TLS=True
EMAIL_HOST='smpt.gmail.com'
EMAIL_HOST_USER='mymail@gmail.com'
EMAIL_HOST_PASSWORD='mypassword'
EMAIL_PORT=587
</code></p>

<p>```py views.py
from django.core.mail import send_mail</p>

<p>def mail(request):</p>

<pre><code>send_mail('Subject','message','mymail.gmail.com',['to@mail.address'],fail_silently=False)
</code></pre>

<p>```</p>

<p>こんだけ</p>

<p>参考：<a href="http://d.hatena.ne.jp/yuheiomori0718/20120714/1342266647">DjangoでGmailを使ってメール送信 &ndash; brainstorm</a>、</p>

<h2>MultiValueDictKeyError</h2>

<p>モデルをgetする時にキーに何も値が指定されてなかったりすると起こる。例えば</p>

<p><code>py
instance = SampleModel.objects.get(id=key)
</code></p>

<p>でkeyに何も設定されてないと起こるみたい。出た時に何回かイチイチぐぐったのでメモ</p>

<h2>PostgreSQLでDateTimeFieldの値を日付に対してグルーピングしたい</h2>

<p>PostgreSQLではタイムゾーン入りのタイムスタンプで登録されるので、</p>

<p><code>py
q = Hoge.objects.extra({"date":"date_trunc('day',date)"})
q.query.group_by['date']
</code></p>

<p>みたいな構文で日付だけ取り出して、グルーピングしようとすると、PostgreSQLの設定でタイムゾーンがUTCになっていた場合に、2014/12/17 00:00:00+9のデータは2014/12/16 15:00:00+0と認識されるので12/16のデータとしてグルーピングされてしまう。日本のタイムゾーンでやってると、これはまずいので、以下のようなコードにすると良い</p>

<p><code>py
q = Hoge.objects.extra({"date":"date_trunc('day',date AT TIME ZONE 'JST')"})
q.query.group_by['date']
</code></p>

<h2>django+uwsgi+nginxで502エラーが出た原因の１つ</h2>

<p>djangoはあまり関係無いけどuwsgiの設定の問題だったので、こちらに。django+uwsgi+nginxで502エラーが出て、runserverでは普通に動いたので、しばらくググって解答が得られたのでメモ</p>

<p><a href="http://datatables.net/">DataTables</a>を使って動的にテーブルデータをロードしようとしたら、runserverでは上手く行くのにuwsgiだと502エラーが出てロード出来なかった。最初にnginxのログを見てみると、uwsgiのとこでエラーと書いてあったので、uwsgiのログをチェックした。すると</p>

<p><code>
invalid request block size: xxxxx (max 4096)...
</code></p>

<p>みたいなエラーが出ていた。リクエストが大きすぎるのかなと思い、リクエストの一部を削ってみたらエラーが出なかった。んで、対策をググってみたら書いてあったので、そのまま下のコードを実装してみた。</p>

<p><code>ini uwsgi.ini
buffer-size=65535
</code></p>

<p>みたいにバッファーサイズを大きく(例では64k)した。これでエラーが消えたのでめでたしめでたし。</p>

<p>参考：<a href="http://stackoverflow.com/questions/22697584/nginx-uwsgi-104-connection-reset-by-peer-while-reading-response-header-from-u">django &ndash; Nginx uwsgi (104: Connection reset by peer) while reading response header from upstream &ndash; Stack Overflow</a></p>

<h2>運用環境と開発環境で設定を切り分ける</h2>

<p>開発環境用にlocalアプリを作って、local/settings.pyを作成し、開発環境での設定を書いて、プロジェクトのsettings.pyの最後に以下を追加すると良い</p>

<p>```py
try:</p>

<pre><code>from local.settings import *
</code></pre>

<p>except ImportError:</p>

<pre><code>pass
</code></pre>

<p>```</p>

<p>参考：<a href="http://surgo.jp/2010/02/django.html">パーフェクトな Django の設定ファイル &mdash; Kosei Kitahara&rsquo;s Blog</a></p>

<h2>テンプレートの読み込まれ順</h2>

<ul>
<li>TEMPLATE_DIRSで指定されたディレクトリの順番で、そこを起点にした全てのテンプレート</li>
<li>INSTALLED_APPSに指定した順にアプリケーション直下のtemplatesディレクトリを調べる</li>
</ul>


<p>hogeアプリでテンプレートを指定した場合に、hogeアプリ直下のtemplatesディレクトリを調べてくれる訳ではないので注意が必要。</p>

<p>例えば</p>

<p>```py
TEMPLATE_DIRS = [&lsquo;/home/hoge/templates&rsquo;,]
INSTALLED_APPS = (</p>

<pre><code>'hoge',
'fuga',
</code></pre>

<p>)
```</p>

<p>と書いてあり、プロジェクトが/www/a_project/に置いてある場合、</p>

<ul>
<li>/home/hoge/templates</li>
<li>/www/a_project/hoge/templates</li>
<li>/www/a_project/fuga/templates</li>
</ul>


<p>の順でテンプレートの存在を調べる</p>

<p>参考：<a href="http://www.tsuyukimakoto.com/blog/2006/11/22/django-template-loader/">DjangoのTemplateローダ | tsuyuki.makoto</a></p>

<h2>Many to manyなモデルで中間テーブルをthroughで指定、かつ自己参照な場合の設定</h2>

<p>参考：<a href="http://stackoverflow.com/questions/3880489/how-do-i-write-a-django-model-with-manytomany-relationsship-with-self-through-a">How do I write a Django model with ManyToMany relationsship with self through a Model &ndash; Stack Overflow</a></p>

<p>symmetrical設定をすると良いらしい</p>

<p>```py
class Member(models.Model):</p>

<pre><code>name = models.CharField(max_length=100)
friends = models.ManyToManyField('self', through = 'MemberFriends', symmetrical = False)
</code></pre>

<p>class MemberFriends(models.Model):</p>

<pre><code>f = models.ForeignKey(Member, related_name = 'f')
t = models.ForeignKey(Member, related_name = 't')
comment = model.CharField(max_length = 100)
</code></pre>

<p>```</p>

<p>こんな感じ</p>

<h2>url末尾に必ずスラッシュを入れる</h2>

<p>url末尾にスラッシュが無い場合、スラッシュ有りにリダイレクトする設定</p>

<p><code>py settings.py
APPEND_SLASH = True
</code></p>

<h2>Django rest apiで日時としてタイムスタンプを出力する</h2>

<p>参考：<a href="http://stackoverflow.com/questions/26083583/serialize-a-datetime-as-an-integer-timestamp">django rest framework &ndash; serialize a datetime as an integer timestamp &ndash; Stack Overflow</a></p>

<p>どうもDjango rest frameworkのDateTimeFieldで指定するformatパラメータだとタイムスタンプが指定出来ないみたいなのでこんな感じにすると出来る。</p>

<p>```py serialize.py
from rest_framework import serializers
import time
class HogeSerializer(serializers.Serializer):</p>

<pre><code>date = serializers.DateTimeField()
timestamp = serializers.SerializerMethodField()
def get_timestamp(self, obj):
    return time.mktime(obj.date.timetuple())
</code></pre>

<p>```</p>

<p>javascriptのタイムスタンプに対応するためにはget_timestampの返り値を1000倍すればおk</p>

<h2>Paginatorでcount文を実行させずに指定件数分のページングを行う</h2>

<p>分量が多くて、先頭1000件を100件ずつページング表示させるので十分かなという時に、いちいちcount文を発行させたくない時</p>

<p><code>py
paginator = Paginator(query, 100)
paginator._count = 1000
</code></p>

<p>queryは適当なQuerySet</p>

<p>参考：<a href="http://stackoverflow.com/questions/7707035/how-to-implement-a-paginator-that-doesnt-call-count">django &ndash; How to implement a paginator that doesn&rsquo;t call count(*) &ndash; Stack Overflow</a></p>

<h2>メソッドの呼び出し元オブジェクトを取得</h2>

<p>inspectモジュールってのが使えるらしい</p>

<p>```py
import inspect
&hellip;</p>

<pre><code>(frame, filename, line_number, function_name, lines, index) = inspect.getouterframes(inspect.currentframe())[1]
print(frame, filename, line_number, function_name, lines, index)
</code></pre>

<p>```</p>

<p>参考：<a href="http://stackoverflow.com/questions/3711184/how-to-use-inspect-to-get-the-callers-info-from-callee-in-python">How to use inspect to get the caller&rsquo;s info from callee in Python? &ndash; Stack Overflow</a></p>

<p>プロファイラ使った時に、socket.pyが呼ばれてるのは分かったけど、その呼び出し元がイマイチわからなかった時に使った。</p>

<h2>urlsでviewにパラメータを送る</h2>

<p><code>py urls.py
url('^$',views.hoge, {'fuga':'hage'}, name='hoge'),
...
</code></p>

<p>```py views.py
def hoge(request,fuga):</p>

<pre><code>...
</code></pre>

<p>```</p>

<p>パラメーターに指定する名前（上の場合はfuga）がviewsとurlsで同じ名前になっていることが必要（でないとエラーが出る）</p>

<p>参考：<a href="https://docs.djangoproject.com/en/1.8/topics/http/urls/#passing-extra-options-to-include">URL dispatcher | Django documentation | Django</a></p>

<h2>dbにインデックスを付ける</h2>

<p>インデックスの場合はフィールド定義にdb_index=Trueを付けるとおk</p>

<p><code>py
hoge = models.TextField(db_index=true)
</code></p>

<p>複合インデックスの場合はMetaクラスでindex_togetherを定義する</p>

<p>```py
class Hoge(models.Model):
  &hellip;.
  class Meta:</p>

<pre><code>index_together = [
  ['hoge','fuga']
]
</code></pre>

<p>```</p>

<p>この場合インデックス順はhoge->fugaとなる。</p>

<h2>ForeignKeyで逆参照をしたくない場合</h2>

<p>related_nameを+にするか末尾に+を付けるかで対応出来る。</p>

<p><code>sh
user = models.ForeignKey(User, related_name='user+')
</code></p>

<p>こんな感じ</p>

<h2>生sqlを使う時にin句にパラメーターを使いたい</h2>

<p>タプルで指定すれば良い。リストは試してない。</p>

<p><code>sh
results = Hoge.objects.raw("select * from application_hoge where fuga in %s", tuple(fuga))
</code></p>

<p>参考：<a href="http://stackoverflow.com/questions/6895051/passing-lists-or-tuples-as-arguments-in-django-raw-sql">passing lists or tuples as arguments in django raw sql &ndash; Stack Overflow</a></p>

<h2>Ajaxでpostしたい時</h2>

<p>csrfフィルタが初期状態で設定されてるし、csrfフィルタはあった方が良いので、次のようになったら良いかも（Jqueryを使う場合）</p>

<p><code>js
$.post(url,{csrfmiddlewaretoken: ''}...);
</code>
参考：<a href="http://stackoverflow.com/questions/5100539/django-csrf-check-failing-with-an-ajax-post-request">Django CSRF check failing with an Ajax POST request &ndash; Stack Overflow</a></p>

<h2>AjaxのPOSTで配列を受け取りたい時</h2>

<p><code>js
var arr = ['hoge','fuga'];
$.post(url, {arr:arr}, function(){alert('success');});
</code></p>

<p>該当するビューでこんな風に書く</p>

<p>```py
def hoge(request):</p>

<pre><code>arr = request.POST.getlist('arr'[]')
</code></pre>

<p>```</p>

<p>ちなみにgetだと[]は要らないらしい。</p>

<p>参考：[<a href="http://stackoverflow.com/questions/12101658/how-to-get-an-array-in-django-posted-via-ajax">http://stackoverflow.com/questions/12101658/how-to-get-an-array-in-django-posted-via-ajax</a>]
該当するビューでこんな風に書く</p>

<p>```py
def hoge(request):</p>

<pre><code>arr = request.POST.getlist('arr'[]')
</code></pre>

<p>```</p>

<p>ちなみにgetだと[]は要らないらしい。</p>

<p>参考：<a href="http://stackoverflow.com/questions/12101658/how-to-get-an-array-in-django-posted-via-ajax">How to get an array in Django posted via Ajax &ndash; Stack Overflow</a></p>

<h2>intcommaフィルタが効かない(django 1.8)</h2>

<p>django 1.4からL10Nを見るので、ロケールjaの場合はNUMBER_GROUPINGを明示しないといけないらしい。</p>

<p><code>py settings.py
NUMBER_GROUPING = 3
</code></p>

<p>これでおk</p>

<p>参考：<a href="http://yamayoshi.blogspot.jp/2013/02/django14-intcomma.html">やまよし＠Google大好き: Django1.4 で intcommaが効かない</a></p>

<h2>サブクエリの使い方</h2>

<p>例えばMemberモデルにname (名前)やboss(上司の名前)、stage(肩書き)フィールドがあるとして、肩書きが部長の上司を持つMemberを取り出したい場合はこんな感じ</p>

<p><code>py
a_query = Member.objects.filter(stage='部長').value_list('name')
b_query = Member.objects.filter(boss__in = a_query)
</code></p>

<p><code>sql
select * from member where boss in (select name from member where stage='部長');
</code></p>

<p>を実行したような感じになる。</p>

<p>参考：<a href="http://stackoverflow.com/questions/8556297/how-to-subquery-in-queryset-in-django">python &ndash; how to subquery in queryset in django? &ndash; Stack Overflow</a></p>

<h2>リダイレクト時にパラメータを渡す</h2>

<p><code>py
response = redirect('name', param)
response['Location'] += '?hoge=fuga'
return response
</code></p>

<p>でいける</p>

<p>参考：<a href="http://stackoverflow.com/questions/3765887/add-request-get-variable-using-django-shortcuts-redirect">add request.GET variable using django.shortcuts.redirect &ndash; Stack Overflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titanium Mobileメモ]]></title>
    <link href="http://blog.shigepon.info/blog/2014/11/23/titanium-mobile-memo/"/>
    <updated>2014-11-23T09:48:44+09:00</updated>
    <id>http://blog.shigepon.info/blog/2014/11/23/titanium-mobile-memo</id>
    <content type="html"><![CDATA[<p>Titanium Mobileに関するメモ</p>

<h2>アプリ固有の設定を登録する</h2>

<p>アプリを終了して、再起動させた時も保存される設定をしたい時はTitanium.App.Propertiesを使う</p>

<p><code>js
Ti.App.Properties.setString("hoge","fuga");//設定
hoge = Ti.App.Properties.getString("hoge");//取得
</code></p>

<p>stringを例にしてるが、ListとかObjectとかBoolとか色々入れられる。</p>

<!-- more -->


<h2>Titanium MobileのUIで本家以外に参考にしてるサイト</h2>

<p><a href="https://code.google.com/p/titanium-mobile-doc-ja/w/list">Wiki Pages &ndash; titanium-mobile-doc-ja &ndash; Appcelerator Titanium Mobileに関するドキュメントを日本語でまとめていくプロジェクト &ndash; Google Project Hosting</a></p>

<h2>Android実機で文字が小さくなる</h2>

<p>```xml tiapp.xml
<android xmlns:android="http://schemas.android.com/apk/res/android"></p>

<pre><code>&lt;manifest&gt;
     &lt;supports-screens android:anyDensity="false"/&gt;
&lt;/manifest&gt;
</code></pre>

<p></android>
```</p>

<p>もしくは文字サイズをdpで指定</p>

<p>参考：<a href="http://www.fujimotohajime.net/pukiwiki/index.php?TitaniumMobile%2FAndroid%E3%81%A7%E5%AE%9F%E6%A9%9F%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B%E3%81%A8%E6%96%87%E5%AD%97%E3%81%8C%E5%B0%8F%E3%81%95%E3%81%84">TitaniumMobile/Androidで実機テストすると文字が小さい &ndash; Wiki</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python memo]]></title>
    <link href="http://blog.shigepon.info/blog/2014/06/30/python-memo/"/>
    <updated>2014-06-30T20:38:44+09:00</updated>
    <id>http://blog.shigepon.info/blog/2014/06/30/python-memo</id>
    <content type="html"><![CDATA[<p>Djangoやり始めたので、その過程で記録しておきたいことをメモ。</p>

<h2>pip freezeでWarning: cannot find svn location for distribute==0.6.24dev-r0</h2>

<p><code>sh
$ sudo pip install --upgrade distribute
</code></p>

<p>でおk</p>

<h2>pipで一気にインストールする</h2>

<p>pip freezeで出てくる出力をファイルに書き出したものを使うと、別の環境で同じ状態にもっていける。ファイルからバージョン情報を消すと最新の状態でインストール出来る。</p>

<p><code>sh
$ pip install -r freezed.txt
</code></p>

<h2>for文でループカウント取得</h2>

<p>参考<a href="http://fujishinko.exblog.jp/7669024">Python 配列をfor文でまわしているときのループカウント取得 : fujishinko 雑記帳</a></p>

<p><code>py
for i,item in enumerate(['a','b','c']):
  print i,item
</code></p>

<!-- more -->


<h2>日本語のコマンドライン引数取得</h2>

<p>参考<a href="http://www.yukun.info/blog/2008/07/python-command-line-arguments.html">Python: コマンドライン引数の取得 – sys.argv変数</a></p>

<p>```py :hoge.py</p>

<h1>&ndash;*&ndash; encoding: utf-8 &ndash;*&ndash;</h1>

<p>import sys
argv = sys.argv
print argv[1].decode(&ldquo;utf-8&rdquo;)
```</p>

<p><code>sh
$ python hoge.py あいうえお
あいうえお
$
</code></p>

<h2>コマンド実行して実行結果を取得</h2>

<p>参考<a href="http://qiita.com/mokemokechicken/items/a84b0aa96b94d1931f08">Python の subprocess で出力を受け取るときは communicate() を使おう &ndash; Qiita</a>
subprocessを使う。何か昔は別の手法だったらしい。</p>

<p><code>py
import subprocess
p = subprocess.Popen("echo 'hoge'",shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
p.wait()
stdout_data,stderr_data = p.communicate()
print stdout_data.decode("utf-8").strip()
</code></p>

<h2>親クラスのメソッド呼び出し</h2>

<p>```py
class Hoge(object):</p>

<pre><code>def aaa(self,param):
    print param
</code></pre>

<p>class Fuga(Hoge):</p>

<pre><code>def bbb(self,param):
    self.hage = super(Fuga,self).aaa(param)
</code></pre>

<p>f = Fuga()
f.bbb(&lsquo;test&rsquo;)
```</p>

<p>こんな感じ。お作法を忘れがち。</p>

<h2>正規表現オブジェクトのパターンをチェックする方法</h2>

<p>他のライブラリで正規表現が設定されてて、その内容をチェックしたかったので調べてみたら、patternプロパティを見れば良いらしい</p>

<p><code>py
import re
r = re.compile('^hoge',re.l)
print r.pattern
</code></p>

<p>参考：<a href="http://compgroups.net/comp.lang.python/how-to-print-sre_pattern-regexp-object-text/309372">How to print SRE_Pattern (regexp object) text for debugging purposes? &ndash; comp.lang.python</a></p>

<h2>1ヶ月前の日付を求める</h2>

<p>timedeltaを使うとweeksとかdaysしか指定出来ないので、1ヶ月前の日付を取得しようと思ったら、別の方法が必要になる</p>

<p>``` py
import time
from datetime import date</p>

<p>base_date = date(2015,1,3)
one_month_ago = date.fromtimestamp(time.mktime((base_date.year, base_date.month -1, base_date.day, 0, 0, 0, 0, 0, 0)))
```</p>

<p>こんな感じで出来る。
参考：<a href="http://blog.kjirou.net/p/381">[Python] 月の加減算処理ができない？ | それなりブログ</a></p>

<h2>日付表示で良く使うフォーマット</h2>

<p><code>py
from datetime import date
print date(2002,12,4).isoformat()
</code></p>

<p>としておくと、2002-12-04と表示される</p>

<h2>lxmlをインストールしようとしたら、fatal error: libxml/xmlversion.h: No such file or directory</h2>

<p>ライブラリが足らないのでインストールすればおk
<a href="http://stackoverflow.com/questions/15759150/src-lxml-etree-defs-h931-fatal-error-libxml-xmlversion-h-no-such-file-or-di">python 2.7 &ndash; src/lxml/etree_defs.h:9:31: fatal error: libxml/xmlversion.h: No such file or directory &ndash; Stack Overflow</a></p>

<p><code>sh
$ sudo aptitude install libxml2-dev libxslt1-dev
</code></p>

<h2>pythonでsudoを付けたコマンドを実行する</h2>

<p>パスワードをリダイレクトすればおk
<a href="http://stackoverflow.com/questions/13045593/using-sudo-with-python-script">shell &ndash; Using sudo with Python script &ndash; Stack Overflow</a></p>

<p><code>py
import os
p = os.system('echo pass | sudo -S ...')
os.popen("sudo -S ...","w").write("pass")
</code></p>

<h2>django rest frameworkでBasic認証のあるサイトを扱う</h2>

<p>basic認証のあるサイトでdjango rest frameworkを使ったjson apiみたいなのを作ろうと思った時に、認証してアクセスしても</p>

<p><code>
{"detail": "Invalid username/password"}
</code></p>

<p>みたいなメッセージが帰ってきてうまく情報を取って来れなかった。</p>

<p>```py settings.py
REST_FRAMEWORK = {</p>

<pre><code>'DEFAULT_AUTHENTICATION_CLASSES': ()
</code></pre>

<p>}
```</p>

<p>と認証を削除するといけた
<a href="http://stackoverflow.com/questions/19693433/django-rest-framework-behind-http-basic-authentication">nginx &ndash; Django Rest Framework behind HTTP Basic Authentication &ndash; Stack Overflow</a></p>

<h2>リストの文字列をリストに変換する</h2>

<p>リクエストでリストの文字列をパラメーターにして送って、それをリストとして評価したかったので、調べてみた。</p>

<p><code>py
import ast
hoge = u'["A","B","C"]
fuga = ast.literal_eval(hoge)
</code></p>

<p><a href="https://docs.python.org/2/library/ast.html#ast.literal%5Feval">32.2. ast — Abstract Syntax Trees — Python 2.7.10 documentation</a>見ると</p>

<blockquote><p>This can be used for safely evaluating strings containing Python values from untrusted sources without the need to parse the values oneself.</p></blockquote>

<p>と、あるので、変換だけならチェックしなくても問題ない・・・かも？</p>

<p>参考：<a href="http://stackoverflow.com/questions/1894269/convert-string-representation-of-list-to-list-in-python">convert string representation of list to list in python &ndash; Stack Overflow</a></p>

<h2>lxmlで&nbsp;が入った文章をxmlでパース出来ない</h2>

<p>xmlに&nbsp;（空白）が入っている場合に、xmlとしてパースした場合に</p>

<p><code>
lxml.etree.XMLSyntaxError: Entity 'nbsp' not defined
</code></p>

<p>みたいなメッセージを出されちゃうことがある。解決策としては</p>

<ul>
<li>htmlとしてパースする</li>
<li>xml定義をしっかりやっておく</li>
<li>＆の部分を適当に置換</li>
</ul>


<p>くらいがある。</p>

<h4>htmlとしてパース</h4>

<p><code>py
from lxml import etree
from StringIO import StringIO
parser = etree.HTMLParser()
parsed = etree.HTML(StringIO(source), parser)
</code></p>

<h4>xml定義をしっかり書く</h4>

<p>xmlとしてしっかり書いて、パーサーのパラメータとしてresolve_entities=Falseと指定すれば良いらしい</p>

<p><code>py
from lxml import etree
from StringIO import StringIO
source = """&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;hoge&gt;&amp;nbsp;fuga&lt;/hoge&gt;"""
parser = etree.XMLParser(resolve_entities=False)
parsed = etree.parse(StringIO(source), parser)
print etree.tostring(parsed)
</code></p>

<h4>＆を適当に置換</h4>

<p>一個一個特殊文字をユニコードに変えるという手もあるけど、とても手間なので</p>

<p><code>py
source = source.replace('&amp;','&amp;amp;')
</code></p>

<p>とやってからパースすれば通る</p>

<h2>except時にトレースバックを表示</h2>

<p>```py
import traceback</p>

<p>def hoge():</p>

<pre><code>try:
    ...
except Exception as e:
    traceback.print_exc()
</code></pre>

<p>```</p>

<p>こんな感じで、tracebackを使えば良い</p>

<p>参考：<a href="https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/">Python Exception Handling Techniques | Doug Hellmann</a></p>

<h2>datetimeからタイムスタンプへの変換（逆も)</h2>

<p>```py
import datetime
import time</p>

<p>def datetime_to_timestamp(dt):</p>

<pre><code>timestamp = time.mktime(dt.timetuple())
return timestamp
</code></pre>

<p>def timestamp_to_datetime(timestamp):</p>

<pre><code>dt = datetime.datetime.fromtimestamp(timestamp)
return dt
</code></pre>

<p>```</p>

<p>こんな感じ</p>

<p>参考：<a href="http://uokada.hatenablog.jp/entry/20120217/1329444315">pythonでdatetimeとtimestampを相互変換するコード &ndash; uokadaの見逃し三振は嫌いです</a></p>

<h2>パイプで渡されたデータを受け取る</h2>

<p>```py</p>

<h1>encoding: UTF-8</h1>

<p>import sys
lines = sys.stdin.readlines()
for line in lines:</p>

<pre><code>print line
</code></pre>

<p>```</p>

<p>こんな感じ。ちょっとしたコマンド作る時に使えるのでメモ</p>

<p>参考；<a href="http://studiot.jp/blog/?p=321">[Python]シェルからパイプで渡されたデータをPythonで受け取る « StudioT::DevLog</a></p>

<h2>変数が文字列かチェックする</h2>

<p>文字列が来てる場合はstrptimeやって、他の場合は普通に代入とかそんな場合に、文字列かチェックする必要があるのでメモ</p>

<p>```py
hoge = &ldquo;fuga&rdquo;
if instanceof(hoge, basestring):</p>

<pre><code>pass
</code></pre>

<p>```</p>

<p>こんな感じ。整数ならbasestringをintにするとかやればおk</p>

<p>参考：<a href="http://stackoverflow.com/questions/4843173/how-to-check-if-type-of-a-variable-is-string-in-python">How to check if type of a variable is string in python? &ndash; Stack OverflowHow to check if type of a variable is string in python? &ndash; Stack Overflow</a></p>

<h3>formatにリストを渡す</h3>

<p>```py
l = [&lsquo;hoge&rsquo;,&lsquo;fuga&rsquo;,&lsquo;hage&rsquo;]
print &ldquo;{0},{1},{2}&rdquo;.format(tuple(l))</p>

<p>hoge,fuga,hage
```</p>

<p>こんな感じ。</p>
]]></content>
  </entry>
  
</feed>
