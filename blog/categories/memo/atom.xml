<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: memo | shigeponが関心のある技術情報など]]></title>
  <link href="http://blog.shigepon.com/blog/categories/memo/atom.xml" rel="self"/>
  <link href="http://blog.shigepon.com/"/>
  <updated>2015-04-02T11:07:38+09:00</updated>
  <id>http://blog.shigepon.com/</id>
  <author>
    <name><![CDATA[shigepon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[uwsgiメモ]]></title>
    <link href="http://blog.shigepon.com/blog/2015/03/05/uwsgi-memo/"/>
    <updated>2015-03-05T10:21:54+09:00</updated>
    <id>http://blog.shigepon.com/blog/2015/03/05/uwsgi-memo</id>
    <content type="html"><![CDATA[<p>uwsgi関連ではまった点などをメモ</p>

<h2>invalid request block size</h2>

<p>ajaxでサーバ側からデータを読み込むライブラリを使ってると、条件によって502エラーが出てる(=大体djangoとかのプログラム側のエラーで出る)ので、uwsgiのログを調べると、invalid request block sizeというエラーが出てた。</p>

<p>んで、調べてみると、uwsgiがリクエストのサイズが大きすぎるとエラーを吐いているらしい。ライブラリ側で勝手にパラメーター付けて送られてリクエストのサイズが大きくなっているので、こりゃ調整しないとなということで調べてみた。起動時にオプション設定するか、iniファイルで設定したらいけるらしい</p>

<p><code>sh
$ uwsgi --buffer-size=xxxx
</code></p>

<p><code>ini
...
buffer-size= xxxx
...
</code></p>

<p>参考：<a href="http://stackoverflow.com/questions/15878176/uwsgi-invalid-request-block-size">uwsgi invalid request block size &ndash; Stack Overflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titanium Mobileメモ]]></title>
    <link href="http://blog.shigepon.com/blog/2014/11/23/titanium-mobile-memo/"/>
    <updated>2014-11-23T09:48:44+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/11/23/titanium-mobile-memo</id>
    <content type="html"><![CDATA[<p>Titanium Mobileに関するメモ</p>

<h2>アプリ固有の設定を登録する</h2>

<p>アプリを終了して、再起動させた時も保存される設定をしたい時はTitanium.App.Propertiesを使う</p>

<p><code>js
Ti.App.Properties.setString("hoge","fuga");//設定
hoge = Ti.App.Properties.getString("hoge");//取得
</code></p>

<p>stringを例にしてるが、ListとかObjectとかBoolとか色々入れられる。</p>

<h2>Titanium MobileのUIで本家以外に参考にしてるサイト</h2>

<p><a href="https://code.google.com/p/titanium-mobile-doc-ja/w/list">Wiki Pages &ndash; titanium-mobile-doc-ja &ndash; Appcelerator Titanium Mobileに関するドキュメントを日本語でまとめていくプロジェクト &ndash; Google Project Hosting</a></p>

<h2>Android実機で文字が小さくなる</h2>

<p>```xml tiapp.xml
<android xmlns:android="http://schemas.android.com/apk/res/android"></p>

<pre><code>&lt;manifest&gt;
     &lt;supports-screens android:anyDensity="false"/&gt;
&lt;/manifest&gt;
</code></pre>

<p></android>
```</p>

<p>もしくは文字サイズをdpで指定</p>

<p>参考：<a href="http://www.fujimotohajime.net/pukiwiki/index.php?TitaniumMobile%2FAndroid%E3%81%A7%E5%AE%9F%E6%A9%9F%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B%E3%81%A8%E6%96%87%E5%AD%97%E3%81%8C%E5%B0%8F%E3%81%95%E3%81%84">TitaniumMobile/Androidで実機テストすると文字が小さい &ndash; Wiki</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/04/09/git-memo/"/>
    <updated>2014-04-09T12:36:49+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/04/09/git-memo</id>
    <content type="html"><![CDATA[<p>git関連のメモ</p>

<h3>変更履歴を見る</h3>

<p><code>sh
$ git log -p
</code></p>

<p>で全体の変更履歴</p>

<p><code>sh
$ git log -p filename
</code></p>

<p>でfilenameの変更履歴を表示する</p>

<h3>ブランチ間の変更ファイル一覧を取得</h3>

<p><code>sh
$ git diff --name-only -b parent_branch -b child_branch
</code></p>

<p>参考：<a href="http://qa.atmarkit.co.jp/q/2047">gitの指定ブランチで変更されたファイルの一覧を取得したい &ndash; QA@IT</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/20/nginx-memo/"/>
    <updated>2014-03-20T16:04:53+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/20/nginx-memo</id>
    <content type="html"><![CDATA[<h2>Nginxで503コードのページをカスタマイズする</h2>

<p>なるべく手軽にメンテナンスページを出すための手順</p>

<ul>
<li>path/to/root/error/503.htmlにページを用意する。</li>
<li>path/to/root/error/以下に画像やcss、javascriptなど必要なものを用意する。</li>
<li>nginxの設定を変更する。必要な部分だけ抜粋</li>
</ul>


<p>```
server {</p>

<pre><code>server_name xxx.xxx;
    set $maintenance false;
    if (-f $document_root/error/503.html ){
            set $maintenance true;
    }
    if ($uri ~ "^/error/") {
        set $maintenance false;
    }
    if ($remote_addr = XXX.XXX.XXX.XXX ){
            set $maintenance false;#指定したIPからのアクセスは普通に見れるようにする
    }
    if ($maintenance = true) {
            return 503;
    }
    error_page 503 @maintenance;
    location @maintenance {
            rewrite ^(.*)$ /error/503.html break;
            expires 0;
    }
    location /error/ {}
</code></pre>

<p>}
```</p>

<p>path/to/root/error/503.htmlがあれば、メンテナンス画面を表示する。なければ表示しない。一度nginx設定をリロードすればその後はリロードの必要もない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rhaco3 memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/15/rhaco3-memo/"/>
    <updated>2014-03-15T13:28:55+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/15/rhaco3-memo</id>
    <content type="html"><![CDATA[<p>rhaco3を使ってる人なんて世界で何人居るのかなと思いつつ、あまりに情報が少ないので、メモ書きしていく。
大きめネタは別記事にまとめるが小さいネタはここに追記する。</p>

<h3>Daoで作ったSQLを確認する方法</h3>

<p>Daoを継承したモデルとして、Hogeモデルがあるとして</p>

<p><code>php
\Hoge::start_record();
\Hoge::find_get(\org\rhaco\store\db\Q::eq("id",1));//\Hogeモデルからid=1のデータを1件取得する命令
$queries = \Hoge::stop_record();
var_dump($queries);
</code></p>

<p>こんな感じで使う。出力は</p>

<p>```html
array(1) {
  [0]=>
  array(2) {</p>

<pre><code>[0]=&gt;
string(291) "select t4."id" as c5,t4."name" as c10 from hoge t4 where  ( (t4."id" = ?) )   offset 0 limit 1 "
[1]=&gt;
array(1) {
  [0]=&gt;
  string(1) "1"
}
</code></pre>

<p>  }
```</p>

<p>みたいに出る</p>

<h3>あるクラス用に設定したConfを別クラスから参照したい</h3>

<p>\org\rhaco\Confはクラス用に設定値を決めるのに良く使う。
大体commons/hoge.phpみたいにrhaco3で設定値を書くファイルに書くことが多い。</p>

<p>例としてFlowクラスでルートURLを設定するには</p>

<p><code>php
\org\rhaco\Conf::set("org.rhaco.Flow","app_url","localhost");
</code></p>

<p>こんな感じでcommons/hoge.phpに書いたりする。Flowクラス内では</p>

<p><code>php
$app_url = \org\rhaco\Conf::get("app_url");
</code></p>

<p>で設定した値を読み込める。
他のクラスで読み込みたい場合にどうするか良く分からなかったがソース読んだら分かったのでメモしておく</p>

<p><code>php
$app_url = \org\rhaco\Conf::get("org.rhaco.Flow@app_url");
</code></p>

<p>これでおk。@で区切ってクラス名と取得したい値のキーを書くと値を取って来れる。</p>
]]></content>
  </entry>
  
</feed>
