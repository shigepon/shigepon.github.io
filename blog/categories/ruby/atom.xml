<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | shigeponが関心のある技術情報など]]></title>
  <link href="http://blog.shigepon.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.shigepon.com/"/>
  <updated>2014-04-09T15:07:09+09:00</updated>
  <id>http://blog.shigepon.com/</id>
  <author>
    <name><![CDATA[shigepon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(4):ビューにBootstrapを使う]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/14/a-way-of-creating-rails-application4/"/>
    <updated>2014-03-14T09:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/14/a-way-of-creating-rails-application4</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://ubiqlog.com/archives/8749">Ruby on Rails 4.0正式リリースとBootstrapの正しい設定法 | ユービックログ研究所</a></li>
<li><a href="http://railscasts.com/episodes/328-twitter-bootstrap-basics?language=ja&amp;view=asciicast">#328 Twitter Bootstrap Basics &ndash; RailsCasts</a></li>
</ul>


<p>今回はそっけない表示画面をそれっぽくするためにビューにBootstrapを当てはめる。</p>

<p>Gemfileを編集</p>

<p><code>
+gem 'less-rails'
+gem 'twitter-bootstrap-rails'
+gem 'execjs'
-gem 'sass-rails'
</code></p>

<p>以下のコマンドを実行</p>

<p><code>sh
$ bundle install
$ rails g bootstrap:install
$ rails g bootstrap:layout application
</code></p>

<p>と実行したけど、最後のコマンドはビューを勝手に色々いじるので、しない方が良いかもしれない。上のコマンドを実行すると</p>

<p><code>
app/assets/javascripts/application.js
app/assets/javascripts/bootstrap.js.coffee
app/assets/stylesheets/application.css
app/assets/stylesheets/bootstrap_and_overrides.css.less
</code></p>

<p>が出来る。さて、この状態で出力を見ると、ページ上部がナビゲーションバーで隠れてしまった。
app/assets/stylesheets/bootstrap_and_overrides.css.lessを修正することで対処する</p>

<p>変更前</p>

<p><code>css
@import "twitter/bootstrap/bootstrap";
@import "twitter/bootstrap/responsive";
</code></p>

<p>変更後</p>

<p><code>css
@import "twitter/bootstrap/bootstrap";
body {padding-top:60px;}
@import "twitter/bootstrap/responsive";
</code></p>

<p>これでページが隠れなくなる。レイアウト変更にはapp/views/layouts/application.html.erbを編集する必要がある。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(3):データ一覧ページを作って、詳細ページへのリンクを貼る]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application3/"/>
    <updated>2014-03-10T18:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application3</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a></li>
<li><a href="http://qiita.com/somewhatgood@github/items/9890e75b4c195d47715a">Rails &ndash; link_to の引数と展開の違いまとめ &ndash; Qiita</a></li>
</ul>


<p>前回に引き続き<a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a>を参考にしているが、色々すっとばして16章から適当に確認しながら適当に実装する。</p>

<h3>一覧表示</h3>

<p><code>rb
def index
  @events = Event.all
end
</code></p>

<p>と書くとテーブルにあるデータ全て取ってくるらしい（DAOで良くある書式）。
ビューでは@eventsに対してループさせる必要があるので次のような書式になる。
app/views/events/index.html.erbを次のように書き換える</p>

<p>```erb</p>

<h1>Events</h1>


<table class="table">
    <thead>
        <th>日時</th><th>イベント名</th>
    </thead>
    <% @events.each do |event| %>
        <tr>
            <td><%= event.date.strftime('%Y/%m/%d %H:%m') %></td>
            <td><%= event.name %></td>
        </tr>
    <% end %>
</table>


<p>```</p>

<p>[<a href="http://0.0.0.0:3000/events/index">http://0.0.0.0:3000/events/index</a>]にアクセスすれば一覧が表示される。どこかのページでeachでなくeach_with_indexという書き方してるページあったけど、Rails4では動かなかった。
バージョン違い？</p>

<h3>リンクを貼る</h3>

<p>一覧と詳細を繋げたいので、リンクを貼る。link_toというのを使うらしい。 <a href="http://qiita.com/somewhatgood@github/items/9890e75b4c195d47715a">Rails &ndash; link_to の引数と展開の違いまとめ &ndash; Qiita</a>の「基本」を使えば今回は十分。上のerbを次のように書き換える</p>

<p>```erb</p>

<h1>Events</h1>


<table class="table">
    <thead>
        <th>日時</th><th>イベント名</th><th>link</th>
    </thead>
    <% @events.each do |event| %>
        <tr>
            <td><%= event.date.strftime('%Y/%m/%d %H:%m') %></td>
            <td><%= event.name %></td>
            <td><%= link_to "詳細",:controller=>"events",:action=>"show",:eventid=>event.id %></td>
        </tr>
    <% end %>
</table>


<p>```</p>

<p>controllerはコントローラー、actionはビュー？かどうか分からないけど、コントローラー内で定義してるメソッド、あとパラメーター名（eventid）はconfig/routes.rbで指定したパラメーター名が使用出来る（と思う）。とりあえずこう作ったけど、最終的にハッシュにした方がいいんだろな。</p>

<h3>一覧の範囲を絞り込む</h3>

<p>テーブルのデータ全部でなく、一部のデータに絞り込んで表示してみる。
日付のデータがあるので、今月のデータに絞り込んでみる。app/controllers/events_controller.rbを編集</p>

<p>```rb
  def index</p>

<pre><code>  from = Time.now.at_beginning_of_month
  to = from+1.month
  @events = Event.all(:conditions=&gt;["date&gt;=? and date&lt;=?",from,to],:order=&gt;'date')
</code></pre>

<p>  end
```</p>

<p>ここらへんは<a href="http://waka.hatenablog.com/entry/2013/04/05/083349">ActiveRecordで日付の範囲指定 &ndash; yo_waka&rsquo;s blog</a>を参考にしながら適当に実装した。ActiveRecordは色んな表現方法があるのでどうしたもんかな。ただ、数字も何でもオブジェクトってのは面白い。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(2):データベースにPostgreSQLを使ってみた]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application2/"/>
    <updated>2014-03-10T18:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application2</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a></li>
<li><a href="http://www.oiax.jp/rails3book/setup_postgresql.html">データベースとの接続（PostgreSQL編） &ndash; Ruby on Rails with OIAX</a></li>
<li><a href="http://qiita.com/stkn_bb/items/72d06c149d3e6f315f8c">[Rails]既存のMySQLテーブルに接続する方法 &ndash; Qiita</a></li>
</ul>


<p>前回に引き続き<a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a>を参考にしているが、色々すっとばしてデータベースを作るところをなぞる。
どうもモデルを作って、コマンド打ったら自動的にテーブル作ってくれてよしなにしてくれるらしい。</p>

<p>ではモデルを作る。</p>

<p><code>sh
$ rails g model event name:string date:timestamp
</code></p>

<p>モデルは単数型の英語で書くのが良いらしい。idは書かなくても自動で設定してくれるらしい。コマンドを実行すると次のようなファイルが出来る</p>

<p><code>
app/models/event.rb
db/migrate/20140310033758_create_events.rb
</code></p>

<p>後でテーブルの生成が上手く行かない場合に、変数の型で変なのを設定してる場合とかあるので、migrateフォルダのファイルを修正すると上手くいくことがある。</p>

<p><code>
rake db:migrate
</code></p>

<p>と打ったらテーブルが出来た。めでたしめでたし・・・と思ったらそういえばリモートサーバ上のPostgreSQLテーブルにデータ入れてたのを思い出したので、sqliteからPostgreSQLに使用データベースを変更してみる。</p>

<p><a href="http://www.oiax.jp/rails3book/setup_postgresql.html">データベースとの接続（PostgreSQL編） &ndash; Ruby on Rails with OIAX</a>を参考にしたが、PostgreSQLの設定までは終了しているので、その後の部分をやってみた。</p>

<h3>Gemfileを編集</h3>

<p><code>
gem "sqlite3"
</code></p>

<p>を</p>

<p><code>
gem "pg"
</code></p>

<p>に変更して、bundle installを実行。すると何かエラーが・・・メッセージを見ると<a href="http://qiita.com/youcune/items/5b783f7fde45d0fd4b35">Ruby &ndash; gem install pgしてNo pg_configとなる対処法 &ndash; Qiita</a>が参考になりそうなので、libpq-devを入れてエラーを解消した（Ubuntuの場合)</p>

<h3>config/database.yamlを編集</h3>

<p><code>yaml
development:
  adapter: sqlite3
  database: db/development.sqlite3
  pool: 5
  timeout: 5000
</code></p>

<p>みたいな箇所を</p>

<p><code>yaml
development:
  adapter: postgresql
  host: 000.000.00.00
  port: 5432
  database: bocho
  username: ****
  password: ****
  pool: 5
  timeout: 5000
</code></p>

<p>に変更した。development以外にtest, productionと項目があって、それぞれ同じように変更した。これがどう違うのかはまだ勉強してない。localhostの場合はhost,portは要らないみたい。</p>

<h3>テーブル名の変更</h3>

<p>良く考えたら、PostgreSQLに保存してるデータのテーブルはeventsじゃなくてbochoだったので、そういう設定もしないといけない。その方法は<a href="http://qiita.com/stkn_bb/items/72d06c149d3e6f315f8c">[Rails]既存のMySQLテーブルに接続する方法 &ndash; Qiita</a>を参考にした。eventモデル(app/models/event.rb)を次のように変更</p>

<p>```rb
class Event &lt; ActiveRecord::Base</p>

<pre><code>self.table_name = 'bocho'
</code></pre>

<p>end
```</p>

<p>なんかググったら他の書式もあったけど、それだとエラー出たので、今はこの書き方なのかな？
これで準備が出来たので、テーブルからデータを読み込んで表示してみる</p>

<h3>データ読み込み</h3>

<p>app/controllers/events_controller.rbを次のように書き換え</p>

<p>```rb
  def show</p>

<pre><code>  @event = Event.find_by(:id=&gt;params[:eventid]) 
</code></pre>

<p>  end
```</p>

<p>これ多分</p>

<p><code>rb
@event = Event.find(params[:eventid])
</code></p>

<p>でもいける。</p>

<h3>データ表示</h3>

<p>app/views/events/show.html.erbを編集</p>

<p>```erb</p>

<h1>Event</h1>


<dl>
    <dt>日時</dt>
    <dd><%= @event[:date].strftime('%Y/%m/%d %H:%m') %></dd>
    <dt>イベント名</dt>
    <dd><%= @event[:name] %></dd>
</dl>


<p>```</p>

<p><code>erb
&lt;dd&gt;&lt;%= @event.date.strftime('%Y/%m/%d %H:%m') %&gt;&lt;/dd&gt;
</code></p>

<p>でもおk</p>

<p>以上の作業後に [<a href="http://0.0.0.0:3000/events/show/1">http://0.0.0.0:3000/events/show/1</a>]にアクセスすると
id=1,date=2014/03/01 10:00:00,name=ほげ
というデータが入っていた場合、</p>

<p>```html</p>

<h1>Event</h1>


<dl>
    <dt>日時</dt>
    <dd>2014/03/01 10:00</dd>
    <dt>イベント名</dt>
    <dd>ほげ</dd>
</dl>


<p>```</p>

<p>と表示されたりする。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でPostgreSQLとBootstrap使ったアプリを作ってみた(1):とりあえずRailsアプリを作ってみた]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application/"/>
    <updated>2014-03-10T18:10:41+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/10/a-way-of-creating-rails-application</id>
    <content type="html"><![CDATA[<p>参考にした記事URL一覧</p>

<ul>
<li><a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a></li>
<li><a href="http://www.oiax.jp/rails3book/setup_postgresql.html">データベースとの接続（PostgreSQL編） &ndash; Ruby on Rails with OIAX</a></li>
<li><a href="http://qiita.com/stkn_bb/items/72d06c149d3e6f315f8c">[Rails]既存のMySQLテーブルに接続する方法 &ndash; Qiita</a></li>
<li><a href="http://ubiqlog.com/archives/8749">Ruby on Rails 4.0正式リリースとBootstrapの正しい設定法 | ユービックログ研究所</a></li>
<li><a href="http://railscasts.com/episodes/328-twitter-bootstrap-basics?language=ja&amp;view=asciicast">#328 Twitter Bootstrap Basics &ndash; RailsCasts</a></li>
<li><a href="http://qiita.com/somewhatgood@github/items/9890e75b4c195d47715a">Rails &ndash; link_to の引数と展開の違いまとめ &ndash; Qiita</a></li>
</ul>


<p>基本的なところは<a href="http://openbook4.me/projects/92">小学生でもわかるRuby on Rails入門 | OpenBook</a>をなぞってみる。
ただし、PostgreSQLの既存テーブルを使い、テンプレートにBootstrapを使うので、途中から色々やることが変わっている。</p>

<p><code>sh
$ rails new bocho
</code></p>

<p><a href="">Ruby on Railsを入れてみた</a>に注意点であげたようにGemfileからtherubyracerに関する行をコメントアウトしてbundle install
これをしないとrails g controllerコマンドで</p>

<p><code>sh
autodetect': Could not find a Javascript runtime. ...'
</code></p>

<p>というエラーが出た</p>

<p><code>
$ rails g controller events index show
</code></p>

<p>と入力してビューとコントローラーを作った。これの意味はeventsというコントローラーとindex、showというビューを作る。ビューはスペース区切りで複数書けるみたい。indexはデータ一覧、showは個別データの表示を意味している
ファイルとしては</p>

<p><code>
app/controllers/events_controller.rb
app/views/events/index.html.erb
app/views/events/show.html.erb
</code></p>

<p>が出来る。events_controller.rbにはindexとshowメソッドが入っている</p>

<h3>確認</h3>

<p><code>sh
$ rails s
</code></p>

<p>でサーバを起動させて、[<a href="http://0.0.0.0:3000/events/index">http://0.0.0.0:3000/events/index</a>]と[<a href="http://0.0.0.0:3000/events/show">http://0.0.0.0:3000/events/show</a>]を確認</p>

<p><code>
Events##index
Find me in app/view/events/index.html.erb
</code></p>

<p>みたいなメッセージが出てたらおk</p>

<h3>コントローラー、ビューを修正</h3>

<p>ビューって言っていいのかテンプレートなのか良くわからないけどapp/views/events/show.html.erbを修正</p>

<p>```erb</p>

<h1><%= @event[:name] %></h1>


<p>```</p>

<p>これで[<a href="http://0.0.0.0:3000/events/show">http://0.0.0.0:3000/events/show</a>]を確認するとエラーが表示される。</p>

<p>@eventが登録されてないので、コントローラーで登録する
```rb
  def show</p>

<pre><code>  @event = Hash.new
      @event[:name] = 'hoge'
</code></pre>

<p>  end
```</p>

<p>これでさっきのURLにアクセスすると</p>

<p>```html</p>

<h1>hoge</h1>


<p>```</p>

<p>と表示される。なるほど@変数名に値を入れたらテンプレでアクセス出来るようになるのね。</p>

<h3>URLにパラメーターを入れる</h3>

<p>テーブルのidが1のデータを[<a href="http://0.0.0.0:3000/events/show/1">http://0.0.0.0:3000/events/show/1</a>]で表示出来るように考える。
そのためにはconfig/routes.rbを</p>

<p><code>rb
  get "events/show/"
</code></p>

<p><code>rb
  get "events/show/:eventid" =&gt; "events#show"
</code></p>

<p>こうすると上のURLにアクセスするとevents_controller.rbのshowメソッド内でparams[:eventid]に1が入る
events_controller.rbを次のように変えると</p>

<p>```rb
  def show</p>

<pre><code>  @event = Hash.new
      @event[:name] = params[:eventid]
</code></pre>

<p>  end
```
[<a href="http://0.0.0.0:3000/events/show/1">http://0.0.0.0:3000/events/show/1</a>]にアクセスすると</p>

<p>```html</p>

<h1>1</h1>


<p>```</p>

<p>と表示されるようになる。（あくまでこういうコードはテスト用）
とりあえずここまで</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsを入れてみた]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/26/rails-startup/"/>
    <updated>2014-02-26T14:51:16+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/26/rails-startup</id>
    <content type="html"><![CDATA[<p>rhaco使わないでWebサービス作るならもうPHP使わずに他の言語でやってみようかなと思い、
DjangoとRailsを迷ったあげく、ChefでRuby使うからRubyの勉強という意味を込めてRailsでやってみることにした。</p>

<p>とりあえずまずはインストール出来ないと話にならないので、Railsをインストールしてみた話。</p>

<p>Ubuntu使ってるので、aptitude install railsでさくっと終わるかなと思ってTwitterで何となく</p>

<blockquote><p>shigepon: railsはバージョンいくつを使うと吉なんでしょ？</p></blockquote>

<p>とつぶやいたら、@sugamasaoさんから</p>

<blockquote><p>sugamasao: @shigepon しがらみがなければ、最新の4.0.2が良いと思います。お試しで触って見るなら、4.1のbeta版を使って見ても良いかもしれません〜</p></blockquote>

<p>という話が！そうなるとrubyも2系入れないとダメじゃん！と思いつつ</p>

<blockquote><p>shigepon: @sugamasao ただ、うちのubuntuのrubyが1.8なので、まずは2.0にしないといけないっすね。</p></blockquote>

<p>とボヤいたら、やっぱり</p>

<blockquote><p>sugamasao: @shigepon なるほど〜！1.8系はもうオワコンなので、2系を入れたほうが良いですねwちなみに、いまは2.1がリリースされてます！</p></blockquote>

<p>とのお達しが。んじゃ2系入れるかとググりながらインストールしてみた。
参考にしたページは次のとおり</p>

<ul>
<li><a href="http://qiita.com/emadurandal/items/a60886152a4c99ce1017">Rails開発環境の構築（rbenvでRuby導入からBundler、Rails導入まで） &ndash; Qiita</a></li>
<li><a href="http://stackoverflow.com/questions/19031633/starting-the-rails-sqlite3-error">Starting the rails, sqlite3 Error &ndash; Stack Overflow</a></li>
<li><a href="http://kiyotakagoto.hatenablog.com/entry/2013/05/28/235727">rails server 時に `autodetect': Could not find a JavaScript runtime が出たら。 &ndash; 人生ずっと勉強</a></li>
</ul>


<h3>手順</h3>

<p>行ったり来たりしてるからこんな感じでスッと出来てないけど、だいたいこんな感じ</p>

<h4>rbenvインストール</h4>

<p><code>
git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
mkdir -p ~/.rbenv/plugins
git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
</code></p>

<p>~/.profileに以下を追加</p>

<p><code>sh
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
</code></p>

<p>んで</p>

<p><code>
source ~/.profile
</code></p>

<p>opensslは入ってたから特に何もしなかったけど必要なら</p>

<p><code>
sudo aptitude install openssl
</code></p>

<p>iconv, readlineは最初から入ってるんじゃないかな？
んでインストール</p>

<p><code>
sudo rbenv install -l
rbenv install 2.1.0
rbenv global 2.1.0
</code></p>

<p>rbenvで何かやったら
<code>
rbenv rehash
</code>
を忘れずに</p>

<h3>Bundlerインストール</h3>

<p><code>
rbenv exec gem install bundler
rbenv rehash
</code></p>

<h3>Railsインストール</h3>

<p><code>
bundle init
vim Gemfile
</code></p>

<p>Gemfile内に</p>

<p><code>
gem rails "4.0.2"
</code></p>

<p>を追加。</p>

<p><code>
bundle install --path vendor/bundle
bundle exec new hoge --skip-bundle
rm -f Gemfile
rm -f Gemfile.lock
rm -rf .bundle
rm -rf vendor/bundle
cd hoge
bundle install --path vendor/bundle
echo '/vendor/bundle' &gt;&gt; .gitignore
bundle exec rails server
</code></p>

<p>で途中下のようにハマりながら起動を確認した。</p>

<h3>はまったポイント</h3>

<p>Ruby on Railsをインストールする時にプロジェクトのディレクトリで</p>

<p><code>
bundle install -path vendor/bundle
</code></p>

<p>すると、</p>

<p>```
Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.</p>

<pre><code>    /usr/bin/ruby1.9.1 extconf.rb 
</code></pre>

<p>checking for sqlite3.h&hellip; no
sqlite3.h is missing. Try &lsquo;port install sqlite3 +universal&rsquo;
or &lsquo;yum install sqlite-devel&rsquo; and check your shared library search path (the
location where your sqlite3 shared library is located).
<strong><em> extconf.rb failed </em></strong>
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.</p>

<p>Provided configuration options:</p>

<pre><code>--with-opt-dir
--without-opt-dir
--with-opt-include
--without-opt-include=${opt-dir}/include
--with-opt-lib
--without-opt-lib=${opt-dir}/lib
--with-make-prog
--without-make-prog
--srcdir=.
--curdir
--ruby=/usr/bin/ruby1.9.1
--with-sqlite3-dir
--without-sqlite3-dir
--with-sqlite3-include
--without-sqlite3-include=${sqlite3-dir}/include
--with-sqlite3-lib
--without-sqlite3-lib=${sqlite3-dir}/lib
--enable-local
--disable-local
</code></pre>

<p>Gem files will remain installed in /home/helio/.bundler/tmp/23089/gems/sqlite3-1.3.8 for inspection.
Results logged to /home/helio/.bundler/tmp/23089/gems/sqlite3-1.3.8/ext/sqlite3/gem_make.out</p>

<p>An error occurred while installing sqlite3 (1.3.8), and Bundler
cannot continue.
Make sure that <code>gem install sqlite3 -v '1.3.8'</code> succeeds before
bundling.
```</p>

<p>というエラーが出たのは</p>

<p><code>
sudo aptitude install sqlite3 libsqlite3-dev
bundle install --path vendor/bundle
</code></p>

<p>で出なくなった。インストールパスの指定が無ければpathオプションは要らない。</p>

<p>bundle exec rails serverで</p>

<p><code>
autodetect': Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes. (ExecJS::RuntimeUnavailable)
</code></p>

<p>というエラーが出て、サーバを起動出来なかった。これは
プロジェクトに入っているGemfileに書いてあるtherubyracerに関する行をコメントアウトして</p>

<p><code>
bundle install --path vendor/bundle
</code></p>

<p>とすれば起動出来るようになった。</p>
]]></content>
  </entry>
  
</feed>
