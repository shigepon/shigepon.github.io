<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | shigeponが関心のある技術情報など]]></title>
  <link href="http://blog.shigepon.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://blog.shigepon.com/"/>
  <updated>2014-11-23T23:41:34+09:00</updated>
  <id>http://blog.shigepon.com/</id>
  <author>
    <name><![CDATA[shigepon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ubuntuのmonoでMicrosoft.VisualBasicが動かない件]]></title>
    <link href="http://blog.shigepon.com/blog/2014/08/20/vb-not-work-on-ubuntu/"/>
    <updated>2014-08-20T13:38:34+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/08/20/vb-not-work-on-ubuntu</id>
    <content type="html"><![CDATA[<p>なでしこ2にコミットしたりしつつ、実際にUbuntu 12.04で使ってみたりしているが、vb系のインポートが出来ないとか何とか言われたのでメモ</p>

<p>参考：<a href="http://stackoverflow.com/questions/10071836/vb-net-not-working-on-ubuntu-10-04-with-mono">.net &ndash; VB.NET Not working on Ubuntu 10.04 With Mono &ndash; Stack Overflow</a></p>

<p>要は普通にmonoをインストールしただけ</p>

<p><code>sh
$ sudo aptitude install mono-devel
</code></p>

<p>だとVB系のライブラリはインストールされないらしい。</p>

<p><code>sh
$ sudo aptitude install mono-vbnc
</code></p>

<p>を追加インストールしておこうということだった。情報無かったので結構はまった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntuでodbcを用いてpostgresqlにアクセスする]]></title>
    <link href="http://blog.shigepon.com/blog/2014/05/12/access-postgresql-through-odbc-ubuntu/"/>
    <updated>2014-05-12T22:11:33+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/05/12/access-postgresql-through-odbc-ubuntu</id>
    <content type="html"><![CDATA[<p>なでしこ2のテストのためにubuntuにodbcドライバをインストールしたりしたのでメモ</p>

<h2>odbcドライバのインストール</h2>

<p><code>sh
$ sudo aptitude install unixodbc, odbc-postgresql
$ sudo odbcinst -i -d -f /usr/share/psqlodbc/odbcinst.ini.template
$ sudo odbcinst -i -s -l  -n adyoung-pg -f /usr/share/doc/odbc-postgresql/examples/odbc.ini.template
$ vim /etc/odbc.ini
</code></p>

<p>odbc.iniにはサンプルの設定が入っているので、それを参考にしながら設定</p>

<h2>odbcアクセスしてみる</h2>

<p><code>sh
$ isql -v DSN (UID (PWD))
</code></p>

<p>でアクセスできる。あとはSQLを入力すれば結果を見たりできる。</p>

<h2>monoを使ってアクセスする場合</h2>

<p>monoというかなでしこ2でアクセスする場合に必要だった。libodbc.soが必要というエラーが出るのでunixodbc-devの追加インストールが必要。インストールすればエラー出ずに動くようになる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntuでopensslのsecurity patchを当てる]]></title>
    <link href="http://blog.shigepon.com/blog/2014/04/08/update-openssl-security-patch/"/>
    <updated>2014-04-08T14:39:21+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/04/08/update-openssl-security-patch</id>
    <content type="html"><![CDATA[<p>本日、<a href="http://jp.techcrunch.com/2014/04/08/20140407massive-security-bug-in-openssl-could-effect-a-huge-chunk-of-the-internet/">OpenSSLの重大バグが発覚。インターネットの大部分に影響の可能性 | TechCrunch Japan</a>というニュースで</p>

<blockquote><p>過去2年以内のあらゆるバージョンのOpenSSLが走るシステムで、システムメモリー上にある大量のデータを暴露することが可能</p></blockquote>

<p>と書いてあった、これはまずいので、あわててセキュリティパッチを当てたので手順をメモ。 OSはUbuntu 12.04LTS。</p>

<p>Ubuntuでは<a href="http://www.ubuntu.com/usn/usn-2165-1/">USN-2165-1: OpenSSL vulnerabilities | Ubuntu</a>にあるように、Ubuntu 13.10、12.10、12.04 LTSでセキュリティパッチが出ている（2014年4月7日現在)。ということでaptを使えばセキュリティパッチを当てることが出来る。</p>

<p><code>sh
$ sudo apt-get update
$ sudo apt-get upgrade
</code></p>

<p>または</p>

<p><code>sh
$ sudo aptitude update
$ sudo aptitude upgrade
</code></p>

<p>でおk。ただしopenssl versionでバージョン確認してもパッチが当たったかどうか良く分からないので以下のコマンドで確認</p>

<p><code>sh
$ dpkg -l | grep openssl
</code></p>

<p>Ubuntu 12.04LTSの場合</p>

<p><code>sh
ii  openssl                              1.0.1-4ubuntu5.12                   Secure Socket Layer (SSL) binary and related cryptographic tools
</code></p>

<p>と出ればおk。確認してないけど、Ubuntu 13.10なら1.0.1e-3ubuntu1.2、Ubuntu 12.10なら1.0.1c-3ubuntu2.7と出ていればおk。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux command memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/03/07/linux-command-memo/"/>
    <updated>2014-03-07T08:50:21+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/03/07/linux-command-memo</id>
    <content type="html"><![CDATA[<h2>アクセスログのIPアドレスを集計してみる</h2>

<p>参考：<a href="http://blog.livedoor.jp/stock_value/archives/51443839.html">Linux サーバーでお手軽にログの集計：こっそりと。 &ndash; livedoor Blog（ブログ）</a></p>

<p>Google Analyticsでリファラ無しの変なアクセスが増えたので、アクセスログからIPを集計してみた。
アクセスログの書式はLTSVでこんな感じ</p>

<p><code>
time:07/Mar/2014:06:25:22 +0900       host::11.22.33.46       forwardedfor:-  req:GET / HTTP/1.1   status:200      size:1       referer:-ua:Mozilla/5.0 (***)      reqtime:0.777   cache:- runtime:-       vhost:hoge.fuga
</code></p>

<p>なんか色々ソフト使うのとか面倒だったのでgrepとかawkでほげほげした。要はhost:11.22.33.44に当たる箇所を取り出して表示回数をまとめれば良い。</p>

<p><code>
$ cat access.log | grep -v -i "bot" | grep "referer:-" | grep "status:200" | awk '{print $3}' | sort | uniq -c
</code></p>

<p>軽くbot避けを入れてるけど、crawlerとかspiderとかを避けておくとより正確になるかも。
これだけだと一杯出てくるので100回以上アクセスあったIPだけ取り出してみた。</p>

<p><code>
$ cat access.log | grep -v -i "bot" | grep "referer:-" | grep "status:200" | awk '{print $3}' | sort | uniq -c | grep "[0-9]\{3,\}\s"
</code></p>

<p>ただ、最初の目的には最初の集計の方が役に立った。結局Bingのボットだったみたい。Analyticsではじけなかったアクセスがあったのかな。</p>

<h2>大きなファイルを探す</h2>

<p>例：100MB以上のファイルを探す</p>

<p><code>sh
$ find path -size 100M
</code></p>

<h2>Windows共有フォルダをマウント</h2>

<p>参考：<a href="http://qiita.com/mdstoy/items/54925cdcbca6d558b666">Ubuntu から Windows の共有フォルダをマウントして利用する &ndash; Qiita</a>というかほぼそのまま</p>

<p><code>sh
$ sudo aptitude install cifs-utils
$ sudo mkdir -p /mnt/windows
$ sudo mount -t cifs -o username=WindowsUsername,password=WindowsPassword //ServerNameOrIp/path/to/share /mnt/windows
</code></p>

<h2>ファイルのフルパス一覧を取得</h2>

<p>参考：<a href="http://linux.just4fun.biz/%E9%80%86%E5%BC%95%E3%81%8DUNIX%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%95%E3%83%AB%E3%83%91%E3%82%B9%E5%90%8D%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95.html">逆引きUNIXコマンド/ファイルのフルパス名を取得する方法 &ndash; Linuxと過ごす</a></p>

<p>単純なlsだとファイル名だけが一覧になるので、フルパスの一覧が欲しい場合は一工夫必要</p>

<p><code>sh
$ ls -dF /path/to/dir/*
$ find `pwd` -maxdepth 1 -mindepth 1
</code></p>

<h2>SSHを使ってリモートでコマンド実行する</h2>

<p>単純なコマンド実行</p>

<p><code>sh
$ ssh username@hostname options... "command"
</code></p>

<p>ローカルのファイルをリダイレクトしてリモートコマンドに使用する。</p>

<p><code>sh
$ ssh username@hostname options... "command" &lt; localfile
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[svn memo]]></title>
    <link href="http://blog.shigepon.com/blog/2014/02/11/svn-memo/"/>
    <updated>2014-02-11T11:53:32+09:00</updated>
    <id>http://blog.shigepon.com/blog/2014/02/11/svn-memo</id>
    <content type="html"><![CDATA[<p>svn使っててはまることが結構あるのでメモ</p>

<h2>ubuntuでsvnコマンドすると認証失敗する場合</h2>

<p><code>sh
Password for ‘(null)’ GNOME keyring:
</code></p>

<p>というメッセージが表示される場合、gnome-keyringというやつが邪魔をしているらしい。ログイン情報を削除すれば解決。</p>

<p><code>sh
rm ~/.gnome2/keyrings/login.keyring
</code></p>

<p>でいける。</p>

<h2>コミットするファイルを、ファイルで指定する</h2>

<p>fuga.htmlとhage.htmlを変更しててfuga.htmlだけコミットしたい場合</p>

<p><code>
fuga.html
</code></p>

<p>というファイル(hoge.txt)を作っておいて、</p>

<p><code>sh
$ svn commit -m "コメント" --targets hoge.txt
</code></p>

<p>でおk</p>
]]></content>
  </entry>
  
</feed>
