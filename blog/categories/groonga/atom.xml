<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Groonga | shigeponが関心のある技術情報など]]></title>
  <link href="http://blog.shigepon.info/blog/categories/groonga/atom.xml" rel="self"/>
  <link href="http://blog.shigepon.info/"/>
  <updated>2016-01-25T09:29:02+09:00</updated>
  <id>http://blog.shigepon.info/</id>
  <author>
    <name><![CDATA[shigepon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[use groonga for django cache]]></title>
    <link href="http://blog.shigepon.info/blog/2016/01/15/use-groonga-for-django-cache/"/>
    <updated>2016-01-15T01:43:58+09:00</updated>
    <id>http://blog.shigepon.info/blog/2016/01/15/use-groonga-for-django-cache</id>
    <content type="html"><![CDATA[<p>djangoのキャッシュバックエンドとして、Redisを使ってみたけど、慣れてないし、しばらくしたらメモリを圧迫したせいかdjangoがタイムアウトを連発しだしたので、こりゃだめだと思い、<a href="http://groonga.org/ja/">groonga</a>を試してみた流れを書いておく。groongaは全文検索エンジンだけど、kvsみたいな使い方も出来る。詳しくはgroongaのページを読めば分かる、はず。</p>

<h2>groonga側の設定</h2>

<p>どうも<a href="http://groonga.org/ja/docs/server/memcached.html">Memcachedバイナリプロトコルが使える</a>らしい。マニュアルのページからおもむろに</p>

<p><code>sh
$ groonga -d --protocol memcached hoge
</code></p>

<p>とやるとhogeというファイルが出来た（hogeがデータベース名かつファイル名）。んで、</p>

<p>```sh
$ groonga -c</p>

<blockquote><p>table_list
```</p></blockquote>

<p>とするとテーブルが無い。出来てない。これじゃアクセス出来ないんじゃね？と思い（間違ってたんだけど）ググると固定のテーブル名、カラム名になってうんたらかんたらと書いていた。</p>

<p>そこで「決まった名前でテーブルを手動で作らないといけない」と思い込み、指定するべきテーブル名をググってBingして探して1時間以上、ソースからやっとテーブル名がMemcacheで・・・と分かった時点で<strong>テーブル、カラムはgroonga側で自動で作成する</strong>ことに気づいた。どうもバイナリプロトコルでアクセスがあった瞬間にテーブル、カラムを作るみたい。なので、上のコマンドだけで良かったみたい。えーそうなのー＞＜。こんな簡単なのになんでハマったのか・・・＞＜</p>

<p>ちなみにこのコマンドの場合、ポートは10041となる。</p>

<h2>django側の設定</h2>

<p>groonga側の設定でハマった理由はdjangoのキャッシュフレームワークでdjango.core.cache.backends.memcached.MemcachedCacheを使うと全然キャッシュしてくれなかったことにある。</p>

<p>このライブラリが<strong>バイナリプロトコルを使っていない</strong>というのに全く気付かず、絶対groonga側でテーブル作ってないからだと勘違いして1時間以上無駄にしてしまった。</p>

<p>で、結論としては<a href="https://github.com/jaysonsantos/django-bmemcached">Django-BMemcached</a>を使えば問題なくキャッシュしてくれる。他にもバイナリプロトコルを使うライブラリに<a href="https://github.com/django-pylibmc/django-pylibmc">django-pylibmc</a>があるけど、これは何故か接続の段階で止まってしまった。</p>

<p>手順としてはこんな感じ</p>

<p><code>sh
$ sudo aptitude install libmemcached-dev
$ pip install django-bmemcached
</code></p>

<p>aptitudeの部分は要らないかも（django-pylibmcを入れる時に怒られて入れたので、もしかして必要無いかもしれない）</p>

<p>```py settings.py
CACHES = {</p>

<pre><code>'default':{
    'BACKEND':'django_bmemcached.memcached.BMemcached',
    'LOCATION': ['127.0.0.1:10041'],
}
</code></pre>

<p>}
```</p>

<p>これはローカルで上のような形でgroongaのサーバを作った場合の設定。
これで普通のキャッシュを扱うプログラム書けばちゃんとデータをgroongaに入れてくれた。</p>

<p>めでたしめでたし。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[全文検索エンジンGroongaユーザ勉強会＠神戸に参加しました]]></title>
    <link href="http://blog.shigepon.info/blog/2014/06/28/groonga-study-kobe-2014-06-27/"/>
    <updated>2014-06-28T13:24:22+09:00</updated>
    <id>http://blog.shigepon.info/blog/2014/06/28/groonga-study-kobe-2014-06-27</id>
    <content type="html"><![CDATA[<p>自分の話でなく、他人の話なので丁寧語で。
6月27日に<a href="http://koberoonga.doorkeeper.jp/events/11578">Groongaユーザー勉強会＠神戸</a>に参加しました。ブログに書くまでが勉強会だったのを久々に思い出したので、感想書いてみます。</p>

<p>正直あまり回数行ったことがない神戸で、さらに行ったこと無い区域で、さらに入り口に「Closed」と書いてあったので、見事に迷いました。スマホくらい持たないといかんかなー。</p>

<p>で、勉強会の内容は全員の自己紹介の後、@naoa_yさんが、Groongaについて全般的な紹介と事例紹介として<a href="http://patentfield.com/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8">特許検索のウェブサービスPatentField</a>を紹介する間に、途中気づいた点をどんどん質問していく形式となりました。</p>

<p>LTも時間があればやるはずだったのですが、開始時間が30分遅れたこともあり、出来ませんでした。遅れてすいません＞＜。</p>

<p>以下、色々感想書くと言いつつ、やっぱ感想を書くの苦手なので、自分が気になったポイントを箇条書きで〜</p>

<h3>Groonga全般の話</h3>

<!-- more -->


<ul>
<li>@ktoさんについに会えた！Twitterでいつも質問してすいません＞＜</li>
<li>cliで&mdash;output_type=xmlとかやると整形をよろしくやってくれる</li>
<li>dumpよりはgrndumpは今も変わらず。</li>
<li>PostgreSQLはpg_bgramがいーかも</li>
<li>データサイズがメモリを超えるくらいでDroonga考えると幸せかも（えーと、今動かしてるサービス、データサイズが余裕でメモリ超えてるんですけど）</li>
<li>Mroongaは正規化有りがデフォ、Groongaは正規化無しがデフォ。英語は正規化した方がデータサイズ小さくなるよ</li>
<li>gqtpはこれから非推奨になるかも。</li>
<li>bigramとmecabのインデックスは同時に使える。インデックスをそれぞれ用意して、mecabの方を重み付けてやると吉</li>
</ul>


<!-- more -->


<h3>事例紹介の話</h3>

<ul>
<li>トークナイザとかカスタマイズしてるすげー！</li>
<li>トークナイザをカスタマイズすることで、検索時間を短縮することが出来る</li>
<li>英語の正規化は複数形とかを考えてくれない。</li>
<li>Groongaの機能全て使いたいから、insertとupdateはMroongaでそれ以外はGroongaを使う</li>
<li>Groongaメーリングリストは優しい人がいっぱい！積極的に質問していいと思う。</li>
</ul>


<p>勉強会が終わった後は懇親会に行ってきました。そこで@soundkitchenさんにDocker薦められたので、一回Docker触ってみようと思います。Groonga全然関係ないですね。楽しかったので終電ギリギリまで居ちゃいました。</p>

<p>Groongaは結構使っているんですが、使いこなしてはいないなと思い知らされる点がボコボコ出てくるとても有意義な勉強会でした。次回あればまた参加すると思います！ とりあえずこんな感じで。</p>
]]></content>
  </entry>
  
</feed>
