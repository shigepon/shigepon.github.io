<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Titanium | shigeponが関心のある技術情報など]]></title>
  <link href="http://blog.shigepon.info/blog/categories/titanium/atom.xml" rel="self"/>
  <link href="http://blog.shigepon.info/"/>
  <updated>2016-01-06T12:17:29+09:00</updated>
  <id>http://blog.shigepon.info/</id>
  <author>
    <name><![CDATA[shigepon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Titanium Mobileのプロジェクトをアドホック配信する時にテストしてもらうユーザーを追加する]]></title>
    <link href="http://blog.shigepon.info/blog/2014/12/08/add-uuid-to-titanium-mobile-project/"/>
    <updated>2014-12-08T01:42:49+09:00</updated>
    <id>http://blog.shigepon.info/blog/2014/12/08/add-uuid-to-titanium-mobile-project</id>
    <content type="html"><![CDATA[<p>追記：UUIDと書いてたのはUDIDの間違いでした！恥ずかしー。ご指摘いただいた@key3さんありがとうございました！</p>

<p>いやー色々ぐぐっても大変だったし、これからも結構な頻度でやりそうなのでメモ。</p>

<p>もともと作ったプロビジョニングファイルにUDIDを追加するには、</p>

<h2>ぐぐってしっかり情報があった箇所（プロビジョングファイルにUDIDを追加する）</h2>

<ul>
<li><a href="https://developer.apple.com/account/ios/profile/profileList.action">Apple Developer Center</a>で左メニューのDevices->Allをクリック</li>
<li>右上の＋ボタンからデバイスを追加。名前とUDIDを記入してContinueでおk</li>
<li>左メニューのProvisioning Profiles->AllからUDIDを追加したいプロビジョニングファイルを探してクリック->Editをクリック</li>
<li>Devicesの一覧で、追加したDevice名をチェックしてGenerateボタンを押す</li>
</ul>


<!-- more -->


<h2>ぐぐると古い情報が結構あって混乱した箇所（Xcode使ってローカルのプロビジョニングファイルを最新にする）</h2>

<ul>
<li>Xcodeを起動して、メニューのXcode->Preferencesで開いた画面でAccountsのボタン（右からに番目）をクリック->View Detailsをクリック</li>
<li>左下のリロードボタンを押す</li>
</ul>


<h2>そもそもあまりちゃんと情報が無かった箇所（Titanium Mobileで新しいプロビジョングファイルを使ってipaファイルを作成する）</h2>

<ul>
<li>Titanium Mobileを起動->App Explorerを表示->右上の箱型アイコンをクリック->Distribute &ndash; Ad Hoc/Enterpriseを選択</li>
<li>Distributeの項目でSelect Provisioning Profileの項目で、作成したprofileを選択->残りの必要事項を入力してPublish</li>
<li>DistributeのSpecify locationで指定したフォルダ内にipaファイルが出来ているのでそれを配布すればおk</li>
</ul>


<p>あまり良く分かってないけど、Titanium Mobileで配布する時のプロビジョングファイルと、デバッグ時のRun Configurationで指定するプロビジョングファイルは選択肢として違うものが出てくるので、結構混乱した。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titanium Mobileメモ]]></title>
    <link href="http://blog.shigepon.info/blog/2014/11/23/titanium-mobile-memo/"/>
    <updated>2014-11-23T09:48:44+09:00</updated>
    <id>http://blog.shigepon.info/blog/2014/11/23/titanium-mobile-memo</id>
    <content type="html"><![CDATA[<p>Titanium Mobileに関するメモ</p>

<h2>アプリ固有の設定を登録する</h2>

<p>アプリを終了して、再起動させた時も保存される設定をしたい時はTitanium.App.Propertiesを使う</p>

<p><code>js
Ti.App.Properties.setString("hoge","fuga");//設定
hoge = Ti.App.Properties.getString("hoge");//取得
</code></p>

<p>stringを例にしてるが、ListとかObjectとかBoolとか色々入れられる。</p>

<!-- more -->


<h2>Titanium MobileのUIで本家以外に参考にしてるサイト</h2>

<p><a href="https://code.google.com/p/titanium-mobile-doc-ja/w/list">Wiki Pages &ndash; titanium-mobile-doc-ja &ndash; Appcelerator Titanium Mobileに関するドキュメントを日本語でまとめていくプロジェクト &ndash; Google Project Hosting</a></p>

<h2>Android実機で文字が小さくなる</h2>

<p>```xml tiapp.xml
<android xmlns:android="http://schemas.android.com/apk/res/android"></p>

<pre><code>&lt;manifest&gt;
     &lt;supports-screens android:anyDensity="false"/&gt;
&lt;/manifest&gt;
</code></pre>

<p></android>
```</p>

<p>もしくは文字サイズをdpで指定</p>

<p>参考：<a href="http://www.fujimotohajime.net/pukiwiki/index.php?TitaniumMobile%2FAndroid%E3%81%A7%E5%AE%9F%E6%A9%9F%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B%E3%81%A8%E6%96%87%E5%AD%97%E3%81%8C%E5%B0%8F%E3%81%95%E3%81%84">TitaniumMobile/Androidで実機テストすると文字が小さい &ndash; Wiki</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titanium MobileとDjangoでAjax認証を行う]]></title>
    <link href="http://blog.shigepon.info/blog/2014/11/20/titanium-ajax-post-to-django/"/>
    <updated>2014-11-20T09:42:26+09:00</updated>
    <id>http://blog.shigepon.info/blog/2014/11/20/titanium-ajax-post-to-django</id>
    <content type="html"><![CDATA[<p>最近Titanium Mobile使ってスマホアプリを作ろうかなと思って色々試してるんだけど、ログイン認証する時にはまったので、メモ</p>

<p>参考<a href="http://stackoverflow.com/questions/26022797/in-appcelerator-titanium-how-can-i-get-djangos-csrf-token">In Appcelerator Titanium, how can I get Django&rsquo;s CSRF token?(Stack Overflow)</a></p>

<h2>Titanium MobileでのPOST</h2>

<p>HTTPClientを使って、例えば次のように書く。UIの設計部分とかそんなのは省略。</p>

<p>```sh</p>

<pre><code>var client = Ti.Network.createHTTPClient({
    onerror: function(e){
        Ti.API.debug(e.error);
        alert('error');
    },
    onload: function(e){
        var item = JSON.parse(this.responseText);
        if(item.status==1){//例としてstatusを返すという設定にしているのでこんな感じにしてる
            alert('ログインしました');
        }else{
            alert('ログイン失敗しました');
        }
    }
});
client.open('POST','http://url/to/login');
client.send({username:'hoge',password:'fuga'});
</code></pre>

<p>```</p>

<!-- more -->


<h2>Djangoでのユーザー認証</h2>

<p>Djangoでユーザー認証しようとすると例えばこんな感じ(viewだけ)
REST API作るために、<a href="http://www.django-rest-framework.org/">Django REST framework</a>を使ってるので、そのままコピペしても使えないけど、@部分を消して、Responseとなっている箇所を自力でJSON出力すれば良いと思う。Django REST frameworkについてはどっかで書く。</p>

<p>```py views.py
from rest_framework import viewsets↲
from rest_framework.response import Response↲
from rest_framework.decorators import api_view
from django.contrib.auth import login,authenticate</p>

<p>@api_view([&lsquo;GET&rsquo;,&lsquo;POST&rsquo;])
def do_login(request):↲                                               <br/>
 status = 0↲                                  <br/>
 if request.user.is_authenticated():↲</p>

<pre><code> status = 1↲                                                  
</code></pre>

<p> else:↲</p>

<pre><code> if request.method == 'POST':↲                                 
     username = request.POST['username']↲                          
     password = request.POST['password']↲                      
     user = authenticate(username=username,password=password)↲     
     if user is not None:↲                                     
         status = 1↲                                      
         login(request,user)↲                       
 else:↲                                                      
     return Response({"status":status})↲                 
</code></pre>

<p> return Response({&ldquo;status&rdquo;:status})↲                               <br/>
↲</p>

<p>で、実際やってみるとレスポンスはこんな感じになる</p>

<p>```js
{</p>

<pre><code>"detail": "CSRF Failed: CSRF token missing or incorrect."
</code></pre>

<p>}
```</p>

<p>そういえばDjangoでCSRF対策してるんだった。</p>

<p><code>py settings.py
</code>
MIDDLEWARE_CLASSES = (
&hellip;.</p>

<pre><code>'django.middleware.csrf.CsrfViewMiddleware',
</code></pre>

<p>&hellip;.
)
```</p>

<p>ajaxでやり取りする部分だけ、MIDDLEWARE_CLASSESから削除するって手もあるけど、<a href="http://docs.djangoproject.jp/en/latest/ref/contrib/csrf.html">Django APIリファレンス</a>に書いてあるようにX-CSRFToken という独自ヘッダーに CSRF トークンの 値を設定するという対処をやってみた。</p>

<p>```js
function getCRSF(){</p>

<pre><code>var xhr = Ti.Network.createHTTPClient({
    onload: function(e){
        var item = JSON.parse(this.responseText);
        Ti.App.Properties.setString("csrf", item.csrf);
    }
});
xhr.open('GET','http://url/to/login');
xhr.send();
</code></pre>

<p>}
```</p>

<p>これを書いて、getCRSFを先にどこかで実行しておいて
実際のリクエストはさっきのコードをこんな感じで修正する</p>

<p> ```js</p>

<pre><code>client.open('POST','http://url/to/login');
client.setRequestHeader('X-CSRFToken', Ti.App.Properties.getString("csrf"));//これを追加

client.send({username:'hoge',password:'fuga'});
</code></pre>

<p>```</p>

<p>Django側のコードはGETの時にcsrfのトークンを戻すように書き換える</p>

<p> ```py views.py
from django.core.context_processors import csrf #を追加</p>

<h1>上のviews.pyの14行目をこんな感じで修正</h1>

<p>return Response({&ldquo;status&rdquo;:status,&ldquo;csrf&rdquo;:csrf(request)[&lsquo;csrf_token&rsquo;]})↲</p>

<p>これでいけたみたい。</p>
]]></content>
  </entry>
  
</feed>
